{
  "id": "VsP7Bqroi8",
  "name": "codylandry",
  "type": "dir",
  "expanded": true,
  "depth": 0,
  "path": "codylandry",
  "contents": [
    {
      "id": "CV8QnTkrB5",
      "depth": 1,
      "extension": "GITIGNORE",
      "name": ".gitignore",
      "type": "text",
      "path": "codylandry/.gitignore",
      "iconColor": "#579242",
      "contents": ".DS_Store\nnode_modules\n/dist\n/home-dir\n# local env files\n.env.local\n.env.*.local\n\n# Log files\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Editor directories and files\n.idea\n.vscode\n*.suo\n*.ntvs*\n*.njsproj\n*.sln\n*.sw*\n\n#amplify\namplify/\\#current-cloud-backend\namplify/.config/local-*\namplify/backend/amplify-meta.json\namplify/backend/awscloudformation\nbuild/\ndist/\nnode_modules/\naws-exports.js\nawsconfiguration.json"
    },
    {
      "id": "PyFAVa0ZJQ",
      "depth": 1,
      "extension": "MD",
      "name": "README.md",
      "type": "text",
      "path": "codylandry/README.md",
      "iconColor": "#3E86A0",
      "contents": "# codylandry.com v0.0.1\n\n## Welcome!\n\nThanks for visiting my site!  You're looking at a best effort replica of the \nJetBrains IDE [Webstorm](https://www.jetbrains.com/webstorm/).  I love webstorm and\nhighly recommend you try it out.  \n\n## Why?\n\nThe idea to build an homage to Webstorm struck me while trying to decide what to do with my\nold personal webpage.  It was based on a bootstrap theme and, while it looked nice, it felt very\nboring and definitely didn't show off my capabilities.  Once the idea hit, I couldnt' stop thinking\nabout it.\n\n## Features\n\n- App implemented using:\n    - [Vue](https://vuejs.org/)\n    - [Vuex](https://vuex.vuejs.org/)\n    - [VueHooks](https://github.com/yyx990803/vue-hooks)\n    - A modified version of [jsTerm](https://github.com/clarkduvall/jsterm)\n    - [Vue-Draggable](https://github.com/SortableJS/Vue.Draggable)\n- Basic bash terminal where you can cd around, cat out files, etc.  \n- Project view, where you can see all the files for this very website.\n- Panes are resizable.\n- Layout state is persisted to local storage\n- File editing using [CodeMirror](https://codemirror.net/)\n\n## Roadmap\n\nThis is just the beginning.  I have a ton of plans to make this page even more amazing and fun.\n\n\n- markdown preview\n- ability to login via the terminal\n- ability to save your own files/folders\n- ability to 'pair program' with live cursors and a chat window\n- ability to run commands in the terminal that will send me an email\n- some easter eggs hidden in the pseudo-filesystem\n"
    },
    {
      "id": "ZEBUFaoCep",
      "depth": 1,
      "extension": "JS",
      "name": "babel.config.js",
      "type": "text",
      "path": "codylandry/babel.config.js",
      "iconColor": "#BD8E3E",
      "contents": "module.exports = {\n  presets: [\n    '@vue/app'\n  ]\n}\n"
    },
    {
      "id": "XnfaNENmMe",
      "depth": 1,
      "extension": "JS",
      "name": "build-fs.js",
      "type": "text",
      "path": "codylandry/build-fs.js",
      "iconColor": "#BD8E3E",
      "contents": "const fs = require('fs')\nconst path = require('path')\n\nfunction makeid() {\n  var text = \"\";\n  var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n  for (var i = 0; i < 10; i++)\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n  return text;\n}\n\nconst colorMap = {\n  STYL: '#538642',\n  JS: '#BD8E3E',\n  CSS: '#3E86A0',\n  HTML: '#579242',\n  MD: '#3E86A0'\n}\n\nconst ignored = [\n  'node_modules',\n  'dist',\n  'package-lock.json',\n  '.git',\n  '.idea',\n  '.DS_Store',\n  'file-system.json',\n  'amplify',\n  'aws-exports.js'\n]\n\nconst imageExtensions = [\n  'JPG',\n  'PNG'\n]\n\nconst buildFs = homeDir => {\n  const buildFsDir = (dir, fileList = [], depth = 1, projectPath = '') => {\n    fs.readdirSync(dir).forEach(file => {\n      const filePath = path.join(dir, file)\n      const id = makeid()\n      if (ignored.includes(file)) {\n        return\n      }\n\n      const newProjectPath = `${projectPath}/${file}`\n\n      if (fs.statSync(filePath).isDirectory()) {\n        fileList.push({\n          name: file,\n          type: 'dir',\n          id,\n          depth,\n          path: newProjectPath,\n          expanded: false,\n          contents: buildFsDir(filePath, [], depth + 1, newProjectPath),\n        })\n      } else {\n        const extension = file.substr(file.lastIndexOf('.') + 1).toUpperCase()\n\n        if (imageExtensions.includes(extension)) {\n          const imgPath = dir === 'public'\n            ? `./${file}`\n            : `/img/${file}`\n          fileList.push({\n            id,\n            depth,\n            extension,\n            name: file,\n            type: 'img',\n            path: newProjectPath,\n            iconColor: colorMap[extension] || '#579242',\n            contents: imgPath,\n          })\n          return\n        }\n\n        fileList.push({\n          id,\n          depth,\n          extension,\n          name: file,\n          type: 'text',\n          path: newProjectPath,\n          iconColor: colorMap[extension] || '#579242',\n          contents: fs.readFileSync(filePath).toString(),\n        })\n      }\n    })\n    return fileList\n  }\n\n  return {\n    id: makeid(),\n    name: 'codylandry',\n    type: 'dir',\n    expanded: true,\n    depth: 0,\n    path: 'codylandry',\n    contents: buildFsDir(homeDir, [], 1, 'codylandry')\n  }\n}\n\nif (process.argv.length) {\n\n  const [_, _cmd, directory] = process.argv\n\n  if (_cmd !== __filename) {\n    return\n  }\n\n  if (directory) {\n    console.log(JSON.stringify(buildFs(path.join(__dirname, directory)), null, 2))\n  }\n}\n"
    },
    {
      "id": "dSue8KfN6Z",
      "depth": 1,
      "extension": "JSON",
      "name": "package.json",
      "type": "text",
      "path": "codylandry/package.json",
      "iconColor": "#579242",
      "contents": "{\n  \"name\": \"codylandry\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"scripts\": {\n    \"serve\": \"vue-cli-service serve\",\n    \"build\": \"vue-cli-service build\",\n    \"prebuild\": \"node build-fs.js . > src/file-system.json\",\n    \"lint\": \"vue-cli-service lint\"\n  },\n  \"dependencies\": {\n    \"ajv\": \"^6.8.1\",\n    \"aws-amplify\": \"^1.1.19\",\n    \"codemirror\": \"^5.43.0\",\n    \"flatted\": \"^2.0.0\",\n    \"lodash\": \"^4.17.11\",\n    \"stylus\": \"^0.54.5\",\n    \"stylus-loader\": \"^3.0.2\",\n    \"vue\": \"^2.5.22\",\n    \"vue-hooks\": \"^0.3.2\",\n    \"vuedraggable\": \"^2.17.0\",\n    \"vuex\": \"^3.0.1\"\n  },\n  \"devDependencies\": {\n    \"@vue/cli-plugin-babel\": \"^3.4.0\",\n    \"@vue/cli-plugin-eslint\": \"^3.4.0\",\n    \"@vue/cli-service\": \"^3.4.0\",\n    \"babel-eslint\": \"^10.0.1\",\n    \"eslint\": \"^5.8.0\",\n    \"eslint-plugin-vue\": \"^5.0.0\",\n    \"vue-template-compiler\": \"^2.5.21\"\n  },\n  \"eslintConfig\": {\n    \"root\": true,\n    \"env\": {\n      \"node\": true\n    },\n    \"extends\": [\n      \"plugin:vue/essential\",\n      \"eslint:recommended\"\n    ],\n    \"rules\": {},\n    \"parserOptions\": {\n      \"parser\": \"babel-eslint\"\n    }\n  },\n  \"postcss\": {\n    \"plugins\": {\n      \"autoprefixer\": {}\n    }\n  },\n  \"browserslist\": [\n    \"> 1%\",\n    \"last 2 versions\",\n    \"not ie <= 8\"\n  ]\n}\n"
    },
    {
      "name": "public",
      "type": "dir",
      "id": "fTbFpbCKAw",
      "depth": 1,
      "path": "codylandry/public",
      "expanded": false,
      "contents": [
        {
          "id": "VZ8lJH06ih",
          "depth": 2,
          "extension": "PNG",
          "name": "android-icon-144x144.png",
          "type": "img",
          "path": "codylandry/public/android-icon-144x144.png",
          "iconColor": "#579242",
          "contents": "/img/android-icon-144x144.png"
        },
        {
          "id": "lqdi3XKPZg",
          "depth": 2,
          "extension": "PNG",
          "name": "android-icon-192x192.png",
          "type": "img",
          "path": "codylandry/public/android-icon-192x192.png",
          "iconColor": "#579242",
          "contents": "/img/android-icon-192x192.png"
        },
        {
          "id": "AUboaw0Ucb",
          "depth": 2,
          "extension": "PNG",
          "name": "android-icon-36x36.png",
          "type": "img",
          "path": "codylandry/public/android-icon-36x36.png",
          "iconColor": "#579242",
          "contents": "/img/android-icon-36x36.png"
        },
        {
          "id": "xZymraFMU4",
          "depth": 2,
          "extension": "PNG",
          "name": "android-icon-48x48.png",
          "type": "img",
          "path": "codylandry/public/android-icon-48x48.png",
          "iconColor": "#579242",
          "contents": "/img/android-icon-48x48.png"
        },
        {
          "id": "GNjWPcYVNQ",
          "depth": 2,
          "extension": "PNG",
          "name": "android-icon-72x72.png",
          "type": "img",
          "path": "codylandry/public/android-icon-72x72.png",
          "iconColor": "#579242",
          "contents": "/img/android-icon-72x72.png"
        },
        {
          "id": "n0eNSlRjjE",
          "depth": 2,
          "extension": "PNG",
          "name": "android-icon-96x96.png",
          "type": "img",
          "path": "codylandry/public/android-icon-96x96.png",
          "iconColor": "#579242",
          "contents": "/img/android-icon-96x96.png"
        },
        {
          "id": "0E3MvmMWok",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-114x114.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-114x114.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-114x114.png"
        },
        {
          "id": "bnoqPQcxWf",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-120x120.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-120x120.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-120x120.png"
        },
        {
          "id": "Glm3fpEDiv",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-144x144.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-144x144.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-144x144.png"
        },
        {
          "id": "XXG7abIcXk",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-152x152.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-152x152.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-152x152.png"
        },
        {
          "id": "lz7Bdl2Ypl",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-180x180.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-180x180.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-180x180.png"
        },
        {
          "id": "AsvhlizYWl",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-57x57.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-57x57.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-57x57.png"
        },
        {
          "id": "9QmPhbYhUK",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-60x60.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-60x60.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-60x60.png"
        },
        {
          "id": "Ew8zBwP54r",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-72x72.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-72x72.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-72x72.png"
        },
        {
          "id": "x8U9lWplke",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-76x76.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-76x76.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-76x76.png"
        },
        {
          "id": "rHk0spCTEd",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon-precomposed.png",
          "type": "img",
          "path": "codylandry/public/apple-icon-precomposed.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon-precomposed.png"
        },
        {
          "id": "oyuzFPnSH5",
          "depth": 2,
          "extension": "PNG",
          "name": "apple-icon.png",
          "type": "img",
          "path": "codylandry/public/apple-icon.png",
          "iconColor": "#579242",
          "contents": "/img/apple-icon.png"
        },
        {
          "id": "64pRvHEHhQ",
          "depth": 2,
          "extension": "PNG",
          "name": "favicon-16x16.png",
          "type": "img",
          "path": "codylandry/public/favicon-16x16.png",
          "iconColor": "#579242",
          "contents": "/img/favicon-16x16.png"
        },
        {
          "id": "ftbvOZ7oqj",
          "depth": 2,
          "extension": "PNG",
          "name": "favicon-32x32.png",
          "type": "img",
          "path": "codylandry/public/favicon-32x32.png",
          "iconColor": "#579242",
          "contents": "/img/favicon-32x32.png"
        },
        {
          "id": "0B79EnJVOi",
          "depth": 2,
          "extension": "PNG",
          "name": "favicon-96x96.png",
          "type": "img",
          "path": "codylandry/public/favicon-96x96.png",
          "iconColor": "#579242",
          "contents": "/img/favicon-96x96.png"
        },
        {
          "id": "liBN8InKxD",
          "depth": 2,
          "extension": "ICO",
          "name": "favicon.ico",
          "type": "text",
          "path": "codylandry/public/favicon.ico",
          "iconColor": "#579242",
          "contents": "\u0000\u0000\u0001\u0000\u0001\u0000\u0010\u0010\u0000\u0000\u0001\u0000 \u0000h\u0004\u0000\u0000\u0016\u0000\u0000\u0000(\u0000\u0000\u0000\u0010\u0000\u0000\u0000 \u0000\u0000\u0000\u0001\u0000 \u0000\u0000\u0000\u0000\u0000\u0000\u0004\u0000\u0000,\u000e\u0000\u0000,\u000e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000�r*\u0000ג\u001b\u0000׊\u001e\u0003׋\u001e\u0011׉\u001e)ׇ\u001fKׅ tׅ �ׅ �׆ �׆ 1׆ \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ו\u0019\u0000ו\u0019\bה\u001anٓ\u001b�ّ\u001c�َ\u001d�ٌ\u001e�ُ\u001d�٨\u0011�٤\u0013�ٌ\u001e�ن!Sه \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ך\u0017\u0000ٛ\u0017!Ԗ\u0017���\u0016���\u0016���\u0017���\u0014���\b���\u0000���\u0001���\t��}\u0010�\u0000\u0000\u0000\u0018\u0000\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000ס\u0014\u0000ݦ\u0014;��\u0012�3%\u0006� \u0019\u000b�#\u001b\f�#\u001e\u000b� \u001f\u0006�\u001a\u0019\u0000�\u001a\u0019\u0000�\u001a\u001a\u0000�\u0011\u000f\u0000�\t\t\u0000�kf\u00006\u0000\u0000\u0000\u0000��\u0000\u0000ק\u0011\u0000ܫ\u0011]��\u000e�-'\u0016�tuw���������XXY�\u0001\u0001\u0001�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u001a\u0019\u0000���\u0000���\u0000m��\u0000\u0015׭\u000f\u0000ڱ\u000e���\f�\u001d\u0018\u0005�\u0011\u0011\u0012�\u0014\u0014\u0014�\u0014\u0014\u0014�\u000e\u000e\u000e�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u001a\u0019\u0000���\u0000���\u0000���\u0000�׻\b\u0003ڷ\u000b���\n�\u001a\u0016\u0001�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000�\u001a\u0019\u0000���\u0000���\u0000���\u0000�׾\u0007\u0010پ\bǽ�\u0007�\u0018\u0015\u0000�\u001a\u001a\u001c�OOO�\u0016\u0016\u0016�TTT�\u0010\u0010\u0010�JJJ�}}}�JJK�\u001d\u001c\u0003���\u0000���\u0000���\u0000\u001e��\u0004'��\u0005ཪ\u0005�\u0016\u0013\u0000�_`a�����bbb�����@@@�sss�zzz�����><$���\u0000���\u0000{��\u0000\u0000��\u0001F��\u0002�\u0002�\u001c\u001a\u0002�����������������jjj�^^^���������,+\u0012���\u0000���\u0000���\u00003��\u0000m��\u0000���\u0000�53\u001b�������������{{{���������yyy�DDF�\u001d\u001b\u0003���\u0000���\u0000���\u0000���\u0000���\u0000���\u0000�B@(�ttw�(()�uuw�'&&���wuu�����kkm�\u001f\u001e\u0005���\u0000���\u0000���\u0000���\u0000���\u0000���\u0000�20\u0001�\u001a\u0019\u0002�\u001a\u0018\u0000�\u001a\u001a\u0003�\f\u001c\u0018�\t\u001f\"�\n\u001d\u001d�\u0013\"\u001c�\u000f\u0019\u0010�*0\u000b���\u0007���\u0000���\u0000Q��\u0000���\u0000���\u0000���\u0000���\u0000���\u0000���\u0000���T�C���>���N���gɖ���j���?���\u0018���\u0000\u0011��\u0000���\u0000���\u0000���\u0000���\u0000���\u0000���\u0000���\u0005ל�j�P���G���S���l��������`i���\u0000��\u0000\u0001��\u0000\u001e��\u0000n��\u0000���\u0000���\u00008��\u0000\u0002��\u0000(��\u0005�|㠱C���E���M���e�ȷy�\"v�\u0000�\u000f\u0000\u0000�\u000f\u0000\u0000�\u0003\u0000\u0000�\u0003\u0000\u0000�\u0000\u0000\u0000�\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000"
        },
        {
          "id": "xfRkJxMl0b",
          "depth": 2,
          "extension": "HTML",
          "name": "index.html",
          "type": "text",
          "path": "codylandry/public/index.html",
          "iconColor": "#579242",
          "contents": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0\">\n  <link rel=\"apple-touch-icon\" sizes=\"57x57\" href=\"./apple-icon-57x57.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"60x60\" href=\"./apple-icon-60x60.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"72x72\" href=\"./apple-icon-72x72.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"76x76\" href=\"./apple-icon-76x76.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"114x114\" href=\"./apple-icon-114x114.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"120x120\" href=\"./apple-icon-120x120.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"144x144\" href=\"./apple-icon-144x144.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"152x152\" href=\"./apple-icon-152x152.png\">\n  <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"./apple-icon-180x180.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"192x192\"  href=\"./android-icon-192x192.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"./favicon-32x32.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"96x96\" href=\"./favicon-96x96.png\">\n  <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"./favicon-16x16.png\">\n  <link rel=\"manifest\" href=\"./manifest.json\">\n  <meta name=\"msapplication-TileColor\" content=\"#ffffff\">\n  <meta name=\"msapplication-TileImage\" content=\"/ms-icon-144x144.png\">\n  <meta name=\"theme-color\" content=\"#ffffff\">\n  <link rel=\"stylesheet\" href=\"\">\n  <link rel=\"stylesheet\" href=\"./terminal.css\">\n  <link rel=\"stylesheet\"\n        href=\"https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.14.2/styles/darcula.min.css\">\n  <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.7.1/css/all.css\"\n        integrity=\"sha384-fnmOCqbTlWIlj8LyTjo7mOUStjsKC4pOpQbqyi7RrhN7udi9RwhKkMHpvLbHG9Sr\" crossorigin=\"anonymous\">\n  <title>codylandry</title>\n</head>\n<body>\n<noscript>\n  <strong>We're sorry but codylandry doesn't work properly without JavaScript enabled. Please enable it to\n    continue.</strong>\n</noscript>\n<div id=\"app\"></div>\n\n</body>\n\n</html>\n"
        },
        {
          "id": "TrKpMIJxXo",
          "depth": 2,
          "extension": "PNG",
          "name": "ms-icon-144x144.png",
          "type": "img",
          "path": "codylandry/public/ms-icon-144x144.png",
          "iconColor": "#579242",
          "contents": "/img/ms-icon-144x144.png"
        },
        {
          "id": "GYoFhVx4U9",
          "depth": 2,
          "extension": "PNG",
          "name": "ms-icon-150x150.png",
          "type": "img",
          "path": "codylandry/public/ms-icon-150x150.png",
          "iconColor": "#579242",
          "contents": "/img/ms-icon-150x150.png"
        },
        {
          "id": "IDpH29IFme",
          "depth": 2,
          "extension": "PNG",
          "name": "ms-icon-310x310.png",
          "type": "img",
          "path": "codylandry/public/ms-icon-310x310.png",
          "iconColor": "#579242",
          "contents": "/img/ms-icon-310x310.png"
        },
        {
          "id": "6f4IwN81Ox",
          "depth": 2,
          "extension": "PNG",
          "name": "ms-icon-70x70.png",
          "type": "img",
          "path": "codylandry/public/ms-icon-70x70.png",
          "iconColor": "#579242",
          "contents": "/img/ms-icon-70x70.png"
        }
      ]
    },
    {
      "name": "src",
      "type": "dir",
      "id": "DN1QGkBL0a",
      "depth": 1,
      "path": "codylandry/src",
      "expanded": false,
      "contents": [
        {
          "id": "5DkUkKftRt",
          "depth": 2,
          "extension": "VUE",
          "name": "App.vue",
          "type": "text",
          "path": "codylandry/src/App.vue",
          "iconColor": "#579242",
          "contents": "<template>\n  <div id=\"app\"\n       class=\"app\"\n       :class=\"classes\"\n       :style=\"appStyle\">\n    <editor class=\"app__editor\"/>\n    <tool-bar class=\"app__tool-bar\"/>\n    <path-bar class=\"app__path-bar\"/>\n    <left-sidebar class=\"app__left-sidebar\"/>\n    <right-sidebar class=\"app__right-sidebar\"/>\n    <bottom-bar class=\"app__bottom-bar\"/>\n    <context-bar class=\"app__context-bar\"/>\n    <bottom-bar-tabs class=\"app__bottom-bar-tabs\"/>\n    <left-tab-bar class=\"app__left-tab-bar\"/>\n    <right-tab-bar class=\"app__right-tab-bar\"/>\n  </div>\n</template>\n\n<script>\nimport ToolBar from '@/components/layout/tool-bar'\nimport PathBar from '@/components/layout/path-bar'\nimport LeftTabBar from '@/components/layout/left-tab-bar'\nimport RightTabBar from '@/components/layout/right-tab-bar'\nimport Editor from '@/components/layout/editor'\nimport LeftSidebar from '@/components/layout/left-sidebar'\nimport RightSidebar from '@/components/layout/right-sidebar'\nimport BottomBar from '@/components/layout/bottom-bar'\nimport ContextBar from '@/components/layout/context-bar'\nimport BottomBarTabs from '@/components/layout/bottom-bar-tabs'\n\nexport default {\n  name: 'app',\n  components: {\n    Editor,\n    LeftSidebar,\n    RightSidebar,\n    BottomBar,\n    ContextBar,\n    BottomBarTabs,\n    LeftTabBar,\n    RightTabBar,\n    PathBar,\n    ToolBar,\n  },\n  computed: {\n    appGridTemplateColumns () {\n      const { leftSidebar, rightSidebar } = this.$store.state.layout\n      const rightBar = rightSidebar.visible ? rightSidebar.width : 0\n      const leftBar = leftSidebar.visible ? leftSidebar.width : 0\n\n      const editorWidth = leftBar + rightBar + 40\n      return `20px ${leftBar}px calc(100vw - ${editorWidth}px) ${rightBar}px 20px`\n    },\n    appGridTemplateRows () {\n      const { bottomBar } = this.$store.state.layout\n      const editorHeight = 100 + bottomBar.height\n      return `25px 25px calc(100vh - ${editorHeight}px) ${bottomBar.height}px 25px 25px`\n    },\n    appGridTemplateAreas () {\n      return `\n        \"tool-bar         tool-bar          tool-bar          tool-bar              tool-bar\"\n        \"path-bar         path-bar          path-bar          path-bar              path-bar\"\n        \"left-tab-bar     left-sidebar      editor            right-sidebar         right-tab-bar\"\n        \"left-tab-bar     bottom-bar        bottom-bar        bottom-bar            right-tab-bar\"\n        \"bottom-bar-tabs  bottom-bar-tabs   bottom-bar-tabs   bottom-bar-tabs       bottom-bar-tabs\"\n        \"context-bar      context-bar       context-bar       context-bar           context-bar\"\n      `\n    },\n    appStyle () {\n      return {\n        'grid-template-columns': this.appGridTemplateColumns,\n        'grid-template-rows': this.appGridTemplateRows,\n        'grid-template-areas': this.appGridTemplateAreas\n      }\n    },\n    classes () {\n      return [\n        (this.$store.state.disableTextSelect ? 'app--disable-user-select': '')\n      ]\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\">\n@import \"~@/stylus/variables\"\n.app\n  height 100vh\n  display grid\n  background $grey\n\n  &--disable-user-select *\n    user-select none\n\n  &__editor\n    grid-area editor\n    z-index 1\n\n  &__file-opts\n    grid-area file-opts\n\n  &__left-sidebar\n    grid-area left-sidebar\n\n  &__right-sidebar\n    grid-area right-sidebar\n\n  &__context-bar\n    grid-area context-bar\n    z-index 2\n\n  &__tab-bar\n    grid-area tab-bar\n\n  &__bottom-bar\n    grid-area bottom-bar\n    z-index 2\n\n  &__bottom-bar-tabs\n    grid-area bottom-bar-tabs\n    z-index 2\n\n  &__left-tab-bar\n    grid-area left-tab-bar\n\n  &__right-tab-bar\n    grid-area right-tab-bar\n\n  &__path-bar\n    grid-area path-bar\n\n  &__tool-bar\n    grid-area tool-bar\n\n\n</style>\n"
        },
        {
          "name": "assets",
          "type": "dir",
          "id": "nDDtoNgcXp",
          "depth": 2,
          "path": "codylandry/src/assets",
          "expanded": false,
          "contents": [
            {
              "id": "SB9VSPdFgq",
              "depth": 3,
              "extension": "SVG",
              "name": "hidetabs.svg",
              "type": "text",
              "path": "codylandry/src/assets/hidetabs.svg",
              "iconColor": "#579242",
              "contents": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 187 165\" width=\"187\" height=\"165\"><defs><path d=\"M7.8 38.95L149.4 38.95L149.4 158.08L7.8 158.08L7.8 38.95Z\" id=\"bsGXxp5l\"></path><path d=\"M38.29 7.63L179.9 7.63L179.9 126.75L38.29 126.75L38.29 7.63Z\" id=\"by35uPzXM\"></path></defs><g><g><g><use xlink:href=\"#bsGXxp5l\" opacity=\"1\" fill=\"#3b3f41\" fill-opacity=\"1\"></use><g><use xlink:href=\"#bsGXxp5l\" opacity=\"1\" fill-opacity=\"0\" stroke=\"#bababa\" stroke-width=\"15\" stroke-opacity=\"1\"></use></g></g><g><use xlink:href=\"#by35uPzXM\" opacity=\"1\" fill=\"#3b3f41\" fill-opacity=\"1\"></use><g><use xlink:href=\"#by35uPzXM\" opacity=\"1\" fill-opacity=\"0\" stroke=\"#bababa\" stroke-width=\"15\" stroke-opacity=\"1\"></use></g></g></g></g></svg>"
            },
            {
              "name": "img",
              "type": "dir",
              "id": "xHibQ7HXsZ",
              "depth": 3,
              "path": "codylandry/src/assets/img",
              "expanded": false,
              "contents": [
                {
                  "id": "G6ejjvkqw1",
                  "depth": 4,
                  "extension": "SVG",
                  "name": "arrow-down.svg",
                  "type": "text",
                  "path": "codylandry/src/assets/img/arrow-down.svg",
                  "iconColor": "#579242",
                  "contents": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"rgb(187, 187, 187)\">\n    <path d=\"M24 22h-24l12-20z\" transform=\"rotate(180 12 12) translate(0 0)\"/>\n</svg>\n"
                },
                {
                  "id": "zL39edrv0j",
                  "depth": 4,
                  "extension": "SVG",
                  "name": "arrow-right.svg",
                  "type": "text",
                  "path": "codylandry/src/assets/img/arrow-right.svg",
                  "iconColor": "#579242",
                  "contents": "<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"rgb(187, 187, 187)\">\n    <path d=\"M24 22h-24l12-20z\" transform=\"rotate(90 12 12) translate(0 0)\"/>\n</svg>\n"
                },
                {
                  "id": "OQAtGnGLfS",
                  "depth": 4,
                  "extension": "JPG",
                  "name": "bkgd1.jpg",
                  "type": "img",
                  "path": "codylandry/src/assets/img/bkgd1.jpg",
                  "iconColor": "#579242",
                  "contents": "/img/bkgd1.jpg"
                },
                {
                  "id": "h264vIpM9v",
                  "depth": 4,
                  "extension": "SVG",
                  "name": "md-file-icon.svg",
                  "type": "text",
                  "path": "codylandry/src/assets/img/md-file-icon.svg",
                  "iconColor": "#579242",
                  "contents": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg id=\"icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 640 640\" width=\"640\" height=\"640\">\n    <defs>\n        <path d=\"M289.52 0L589.25 0L589.25 339.2L50.75 339.2L50.75 240.72L289.52 240.72L289.52 240.72L289.52 0ZM264.12 0L264.12 207.9L50.75 207.9L50.75 207.9L264.12 0Z\"\n              id=\"coCMudhrv\"/>\n        <path d=\"M0 328.2L640 328.2L640 640.15L0 640.15L0 328.2Z\" id=\"b23RrDk77e\"/>\n        <text id=\"h1Z6LiF3y1\" x=\"167.83\" y=\"326.52\" font-size=\"272\" font-family=\"Roboto\" font-weight=\"normal\"\n              font-style=\"normal\" letter-spacing=\"0\" alignment-baseline=\"before-edge\"\n              transform=\"matrix(1 0 0 1 -174.26941123698907 -12.072714068954156)\" style=\"line-height:100%\"\n              xml:space=\"preserve\" dominant-baseline=\"text-before-edge\"><tspan x=\"167.83\" dy=\"0em\" alignment-baseline=\"before-edge\" dominant-baseline=\"text-before-edge\" text-anchor=\"start\">MD</tspan></text>\n        <style id=\"oxygenmononormalnormal\">\n            @font-face {\n            font-family: \"Roboto\";\n            font-weight: normal;\n            }\n        </style>\n    </defs>\n    <g>\n        <g>\n            <g>\n                <use xlink:href=\"#coCMudhrv\" opacity=\"1\" fill=\"#87939a\" fill-opacity=\"1\"></use>\n            </g>\n            <g>\n                <use xlink:href=\"#b23RrDk77e\" opacity=\"1\" fill=\"#3f93b0\" fill-opacity=\"1\"></use>\n            </g>\n            <g id=\"iNiYJpe1T\">\n                <use xlink:href=\"#h1Z6LiF3y1\" opacity=\"1\" fill=\"#3b3b3b\" fill-opacity=\"1\"></use>\n            </g>\n        </g>\n    </g>\n</svg>\n"
                },
                {
                  "id": "nkUFvgNuAC",
                  "depth": 4,
                  "extension": "SVG",
                  "name": "sass-file-icon.svg",
                  "type": "text",
                  "path": "codylandry/src/assets/img/sass-file-icon.svg",
                  "iconColor": "#579242",
                  "contents": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg id=\"icon\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 640 640\" width=\"640\" height=\"640\">\n    <defs>\n        <path d=\"M289.52 0L589.25 0L589.25 339.2L50.75 339.2L50.75 240.72L289.52 240.72L289.52 240.72L289.52 0ZM264.12 0L264.12 207.9L50.75 207.9L50.75 207.9L264.12 0Z\"\n              id=\"coCMudhrv\"></path>\n        <path d=\"M0 328.2L640 328.2L640 640.15L0 640.15L0 328.2Z\" id=\"b23RrDk77e\"></path>\n        <text id=\"h1Z6LiF3y1\" x=\"167.83\" y=\"326.52\" font-size=\"272\" font-family=\"Roboto\" font-weight=\"normal\"\n              font-style=\"normal\" letter-spacing=\"0\" alignment-baseline=\"before-edge\"\n              transform=\"matrix(1 0 0 1 -174.26941123698907 -12.072714068954156)\" style=\"line-height:100%\"\n              xml:space=\"preserve\" dominant-baseline=\"text-before-edge\"><tspan x=\"167.83\" dy=\"0em\" alignment-baseline=\"before-edge\" dominant-baseline=\"text-before-edge\" text-anchor=\"start\">SASS</tspan></text>\n        <style id=\"oxygenmononormalnormal\">\n            @font-face {\n            font-family: \"Roboto\";\n            font-weight: normal;\n            }\n        </style>\n    </defs>\n    <g>\n        <g>\n            <g>\n                <use xlink:href=\"#coCMudhrv\" opacity=\"1\" fill=\"#87939a\" fill-opacity=\"1\"></use>\n            </g>\n            <g>\n                <use xlink:href=\"#b23RrDk77e\" opacity=\"1\" fill=\"#af536e\" fill-opacity=\"1\"></use>\n            </g>\n            <g id=\"iNiYJpe1T\">\n                <use xlink:href=\"#h1Z6LiF3y1\" opacity=\"1\" fill=\"#3b3b3b\" fill-opacity=\"1\"></use>\n            </g>\n        </g>\n    </g>\n</svg>\n"
                },
                {
                  "id": "wbpg8xla6K",
                  "depth": 4,
                  "extension": "PNG",
                  "name": "vue-icon.png",
                  "type": "img",
                  "path": "codylandry/src/assets/img/vue-icon.png",
                  "iconColor": "#579242",
                  "contents": "/img/vue-icon.png"
                }
              ]
            },
            {
              "id": "OqG2W8K2MS",
              "depth": 3,
              "extension": "PNG",
              "name": "logo.png",
              "type": "img",
              "path": "codylandry/src/assets/logo.png",
              "iconColor": "#579242",
              "contents": "/img/logo.png"
            },
            {
              "id": "a2DuGqxHhO",
              "depth": 3,
              "extension": "JSON",
              "name": "manifest.json",
              "type": "text",
              "path": "codylandry/src/assets/manifest.json",
              "iconColor": "#579242",
              "contents": "{\n \"name\": \"App\",\n \"icons\": [\n  {\n   \"src\": \"\\/android-icon-36x36.png\",\n   \"sizes\": \"36x36\",\n   \"type\": \"image\\/png\",\n   \"density\": \"0.75\"\n  },\n  {\n   \"src\": \"\\/android-icon-48x48.png\",\n   \"sizes\": \"48x48\",\n   \"type\": \"image\\/png\",\n   \"density\": \"1.0\"\n  },\n  {\n   \"src\": \"\\/android-icon-72x72.png\",\n   \"sizes\": \"72x72\",\n   \"type\": \"image\\/png\",\n   \"density\": \"1.5\"\n  },\n  {\n   \"src\": \"\\/android-icon-96x96.png\",\n   \"sizes\": \"96x96\",\n   \"type\": \"image\\/png\",\n   \"density\": \"2.0\"\n  },\n  {\n   \"src\": \"\\/android-icon-144x144.png\",\n   \"sizes\": \"144x144\",\n   \"type\": \"image\\/png\",\n   \"density\": \"3.0\"\n  },\n  {\n   \"src\": \"\\/android-icon-192x192.png\",\n   \"sizes\": \"192x192\",\n   \"type\": \"image\\/png\",\n   \"density\": \"4.0\"\n  }\n ]\n}"
            }
          ]
        },
        {
          "name": "components",
          "type": "dir",
          "id": "eNBhVevyop",
          "depth": 2,
          "path": "codylandry/src/components",
          "expanded": false,
          "contents": [
            {
              "id": "hOFlPmk50V",
              "depth": 3,
              "extension": "VUE",
              "name": "file-icon.vue",
              "type": "text",
              "path": "codylandry/src/components/file-icon.vue",
              "iconColor": "#579242",
              "contents": "<template>\n  <img v-if=\"extension === 'VUE'\" src=\"../assets/img/vue-icon.png\"></img>\n  <svg v-else version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n       preserveAspectRatio=\"xMidYMid meet\" viewBox=\"0 0 640 640\" width=\"640\" height=\"640\">\n    <defs>\n      <path d=\"M289.52 0L589.25 0L589.25 339.2L50.75 339.2L50.75 240.72L289.52 240.72L289.52 240.72L289.52 0ZM264.12 0L264.12 207.9L50.75 207.9L50.75 207.9L264.12 0Z\"\n            :id=\"id1\"></path>\n      <path d=\"M0 328.2L640 328.2L640 640.15L0 640.15L0 328.2Z\" :id=\"id2\"></path>\n      <text :id=\"id3\" x=\"167.83\" y=\"326.52\" font-size=\"272\" font-family=\"Roboto\" font-weight=\"normal\"\n            font-style=\"normal\" letter-spacing=\"0\" alignment-baseline=\"before-edge\"\n            transform=\"matrix(1 0 0 1 -174.26941123698907 -12.072714068954156)\" style=\"line-height:100%\"\n            xml:space=\"preserve\" dominant-baseline=\"text-before-edge\"><tspan x=\"167.83\" dy=\"0em\" alignment-baseline=\"before-edge\" dominant-baseline=\"text-before-edge\" text-anchor=\"start\">{{ extension }}</tspan></text>\n\n    </defs>\n    <g>\n      <g>\n        <g>\n          <use :xlink:href=\"`#${id1}`\" opacity=\"1\" fill=\"#87939a\" fill-opacity=\"1\"></use>\n        </g>\n        <g>\n          <use :xlink:href=\"`#${id2}`\" opacity=\"1\" :fill=\"color\" fill-opacity=\"1\"></use>\n        </g>\n        <g>\n          <use :xlink:href=\"`#${id3}`\" opacity=\"1\" fill=\"#3b3b3b\" fill-opacity=\"1\"></use>\n        </g>\n      </g>\n    </g>\n  </svg>\n</template>\n\n\n\n<script>\n  function makeid() {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for (var i = 0; i < 10; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  }\n  export default {\n    props: {\n      color: {\n        type: String,\n      },\n      extension: {\n        type: String,\n        required: true\n      }\n    },\n    data () {\n      return {\n        id1: makeid(),\n        id2: makeid(),\n        id3: makeid()\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  svg\n    cursor: default\n</style>\n"
            },
            {
              "id": "drGjmjnvfC",
              "depth": 3,
              "extension": "VUE",
              "name": "file-tree-item.vue",
              "type": "text",
              "path": "codylandry/src/components/file-tree-item.vue",
              "iconColor": "#579242",
              "contents": "<template>\n  <div class=\"file-tree-item__wrapper\">\n    <div class=\"file-tree-item\" :class=\"classes\">\n        <span v-if=\"isDirectory\" class=\"file-tree__folder__icon\">\n          <img v-if=\"item.expanded\" src=\"../assets/img/arrow-down.svg\" @click=\"toggleExpanded\">\n          <img v-else src=\"../assets/img/arrow-right.svg\" @click=\"toggleExpanded\">\n          <i class=\"fa fa-folder\"></i>\n        </span>\n        <span v-else class=\"file-tree__file__icon\">\n          <file-icon @click.native=\"openFile\" style=\"height: 14px; width: 14px;\" :name=\"item.name\" :color=\"item.iconColor\" :extension=\"item.extension\"/>\n        </span>\n        <span class=\"file-tree-item__name\" @click=\"openFile\">{{ item.name }}</span>\n    </div>\n    <template v-if=\"item.expanded\">\n      <file-tree-item\n          v-for=\"i in filterLinks(item.contents)\"\n          :key=\"i.name\"\n          :item=\"i\"\n      ></file-tree-item>\n    </template>\n  </div>\n</template>\n\n<script>\n  import FileIcon from './file-icon'\n  import _ from 'lodash'\n\n  export default {\n    name: 'file-tree-item',\n    props: {\n      item: {\n        type: Object,\n        required: true\n      }\n    },\n    components: {FileIcon},\n    data () {\n      return {\n        expanded: false\n      }\n    },\n    methods: {\n      itemContents (item) {\n        return Array.isArray(item.contents)\n          ? item.contents\n          : []\n      },\n      filterLinks (contents) {\n        return contents.filter(item => !item.name.startsWith('.'))\n      },\n      openFile () {\n        if (this.item.type === 'dir') return\n        this.$store.commit('OPEN_FILE', this.item)\n      },\n      toggleExpanded () {\n        this.$store.commit('TOGGLE_FOLDER', this.item)\n      }\n    },\n    computed: {\n      classes () {\n        const typeClass = this.item.type === 'dir'\n          ? 'file-tree__folder'\n          : 'file-tree__file'\n\n        const selectedClass = _.get(this, 'activeFile.id') === this.item.id\n          ? `${typeClass}--selected`\n          : ''\n\n        return `${typeClass} depth-${this.item.depth} ${selectedClass}`\n      },\n      activeFile () {\n        return this.$store.state.activeFile\n      },\n      isDirectory () {\n        return this.item.type === 'dir'\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n\n  .file-opts\n    background: $grey\n    border: 1px solid $darkborder\n\n  .file-tree-item\n    display inline-flex\n    align-items center\n    overflow visible\n    white-space nowrap\n    width 100%\n    &__wrapper\n      overflow visible\n    &__name\n      color: $lightgrey\n      cursor default\n\n\n  .file-tree\n    overflow-x: visible;\n    overflow-y: auto;\n\n    for num in 1..20\n      &__folder.depth-{num}\n        padding-left 20px * num\n      &__file.depth-{num}\n        padding-left 15px + (20px * num)\n\n\n    &__folder,\n    &__file\n      &--selected\n        background: rgb(1, 41, 64)\n\n      &__icon\n        margin-right: 5px\n\n        & > img\n          width: 9px;\n          margin-right: 5px;\n          cursor default\n\n        .fa.fa-file\n          color: #87939a\n\n        .fab.fa-markdown\n          bottom: 0.4em\n          left: 50%\n          transform: translateX(-50%)\n          line-height: 0\n          font-size: 1.5em\n          color: #3f93b0\n\n      .fa.fa-folder\n        color: #87939a\n        font-size 16px\n\n      .fa.fa-caret-down,\n      .fa.fa-caret-right\n        color: #adadad\n        padding-right: 5px\n\n</style>\n"
            },
            {
              "name": "layout",
              "type": "dir",
              "id": "gJyc0xwp6h",
              "depth": 3,
              "path": "codylandry/src/components/layout",
              "expanded": false,
              "contents": [
                {
                  "id": "uNQjByDpiO",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "bottom-bar-tabs.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/bottom-bar-tabs.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"bottom-bar-tabs\">\n    <div class=\"bottom-bar__tab\">\n      <i class=\"fab fa-docker\" style=\"color: #0FAADB\"></i>\n      <span class=\"bottom-bar__tab__label\">Docker</span>\n    </div>\n    <div class=\"bottom-bar__tab bottom-bar__tab--active\">\n      <i class=\"fas fa-terminal\"></i>\n      <span class=\"bottom-bar__tab__label\">Terminal</span>\n    </div>\n    <div class=\"bottom-bar__tab\">\n      <i class=\"fas fa-play\"></i>\n      <span class=\"bottom-bar__tab__label\">Run</span>\n    </div>\n    <div class=\"bottom-bar__tab\">\n      <i class=\"fas fa-list-ul\"></i>\n      <span class=\"bottom-bar__tab__label\">TODO</span>\n    </div>\n    <div class=\"bottom-bar__tab bottom-bar__tab--right\">\n      <i class=\"far fa-comment fa-flip-horizontal\"></i>\n      <span class=\"bottom-bar__tab__label\">Event Log</span>\n    </div>\n  </div>\n</template>\n\n<script>\n  export default {\n    components: {\n\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  @import \"~@/stylus/variables\"\n  .bottom-bar-tabs\n    background $grey\n    border-top 1px solid $lightborder\n    padding 0 25px\n    display flex\n    align-items center\n    color $lightgrey\n\n  .bottom-bar__tab\n    display flex\n    align-items center\n    color $lightgrey\n    padding 0 10px\n    height 100%\n    font-size 12px\n\n    &__label\n      padding-left 6px\n\n    &--active\n      background $darkgrey\n\n    &--right\n      margin-left auto\n</style>\n"
                },
                {
                  "id": "M7lJHVVI6c",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "bottom-bar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/bottom-bar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"bottom-bar\">\n    <terminal/>\n  </div>\n</template>\n\n<script>\n  import useMakeResizeable from '@/hooks/make-resizeable'\n  import store from '@/store'\n  import Terminal from '@/components/terminal'\n\n  export default {\n    components: {\n      Terminal\n    },\n    hooks () {\n      useMakeResizeable({\n        selector: '.bottom-bar',\n        edge: 'top',\n        defaultheight: 100,\n        onResize: (newHeight) => {\n          store.commit('UPDATE_BOTTOM_BAR_HEIGHT', newHeight)\n          store.commit('SET_ALLOW_TEXT_SELECT', true)\n        },\n        onDone: () => {\n          store.commit('SET_ALLOW_TEXT_SELECT', false)\n        }\n      })\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n  .bottom-bar\n    background $darkgrey\n</style>\n"
                },
                {
                  "id": "3bKtZJObSo",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "context-bar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/context-bar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"context-bar\">\n    <!--<i class=\"fa fa-box context-bar__hide-tabs\"></i>-->\n    <img class=\"context-bar__hide-tabs\" src=\"../../assets/hidetabs.svg\">\n    <span class=\"context-bar__text\">\n      <span>6:13</span>\n      <span>\n        <span>LF</span>\n        <span class=\"fa-stack\">\n          <i class=\"fa fa-sort-up fa-stack-1x\"></i>\n          <i class=\"fa fa-sort-down fa-stack-1x\"></i>\n        </span>\n      </span>\n      <span>\n        <span>UTF-8</span>\n        <span class=\"fa-stack\">\n          <i class=\"fa fa-sort-up fa-stack-1x\"></i>\n          <i class=\"fa fa-sort-down fa-stack-1x\"></i>\n        </span>\n      </span>\n      <span>\n        <span>2 spaces</span>\n        <span class=\"fa-stack\">\n          <i class=\"fa fa-sort-up fa-stack-1x\"></i>\n          <i class=\"fa fa-sort-down fa-stack-1x\"></i>\n        </span>\n      </span>\n      <i class=\"fa fa-lock-open\"></i>\n      <i class=\"fas fa-user-secret\"></i>\n      <i class=\"fas fa-cogs\"></i>\n    </span>\n  </div>\n</template>\n\n<style lang=\"stylus\" scoped>\n  @import \"~@/stylus/variables\"\n  .context-bar\n    display flex\n    justify-content space-between\n    align-items center\n    background $grey\n    border-top 1px solid $lightborder\n\n    .fa-stack\n      width 1em\n      font-size 9px\n      padding-left 2px\n\n    &__hide-tabs\n      width: 15px;\n      margin-left: 5px;\n\n    &__text\n      font-size: 11px;\n      color: #B9B9B9;\n      font-weight: 400;\n      padding-right 3px\n\n      & > *\n        padding 0 3px\n</style>\n"
                },
                {
                  "id": "VYcNy9ZKMz",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "editor.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/editor.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"editor\" @keydown.stop @keypress.stop>\n    <div class=\"tab-bar\">\n      <draggable v-model=\"openFiles\" class=\"tabs\">\n        <panel-tab v-for=\"(file, $index) in openFiles\"\n                   class=\"editor-tab\"\n                   :active=\"activeFile.id === file.id\"\n                   :key=\"$index\"\n                   :name=\"file.name\"\n                   @close=\"closeFile(file)\"\n                   :color=\"file.iconColor\"\n                   @click.native=\"openFile(file)\"\n                   :extension=\"file.extension\"/>\n      </draggable>\n    </div>\n    <div style=\"height: 100%; position: relative;\" ref=\"files\" :key=\"activeFile.id\">\n      <div v-if=\"!activeFile.id && !openFiles.length\" class=\"no-files\">\n        <div><span class=\"no-files__txt\">Search Everywhere</span><span class=\"no-files__key\">Double ↑</span></div>\n        <div><span class=\"no-files__txt\">Go to File</span><span class=\"no-files__key\">⇧⌘O</span></div>\n        <div><span class=\"no-files__txt\">Recent Files</span><span class=\"no-files__key\">⌘E</span></div>\n        <div><span class=\"no-files__txt\">Navigation Bar</span><span class=\"no-files__key\">⌘↑</span></div>\n        <div><span class=\"no-files__txt\">Drop Files Here to Open</span></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import Draggable from 'vuedraggable'\n  import PanelTab from '@/components/panel-tab'\n  import CodeMirror from 'codemirror'\n  import 'codemirror/lib/codemirror.css'\n  import 'codemirror/addon/fold/foldgutter.js'\n  import 'codemirror/addon/fold/comment-fold'\n  import 'codemirror/addon/fold/foldcode'\n  import 'codemirror/addon/fold/brace-fold'\n  import 'codemirror/addon/fold/indent-fold'\n  import 'codemirror/addon/fold/markdown-fold'\n  import 'codemirror/addon/fold/foldgutter.css'\n  import 'codemirror/mode/javascript/javascript'\n  import 'codemirror/mode/xml/xml'\n  import 'codemirror/mode/css/css'\n  import 'codemirror/mode/vue/vue'\n  import 'codemirror/mode/htmlmixed/htmlmixed'\n  import 'codemirror/mode/stylus/stylus'\n  import 'codemirror/mode/python/python'\n  import 'codemirror/mode/markdown/markdown'\n\n  export default {\n    components: {PanelTab, Draggable},\n    computed: {\n      openFiles: {\n        get () {\n          return this.$store.state.openFiles\n        },\n        set (val) {\n          this.$store.commit('SET_OPEN_FILES', val)\n        }\n      },\n      activeFile () {\n        return this.$store.state.activeFile\n      },\n      highlightWatches () {\n        return {...this.openFiles, ...this.activeFile}\n      }\n    },\n    watch: {\n      highlightWatches: {\n        immediate: true,\n        deep: true,\n        handler () {\n          this.loadCodemirror()\n        }\n      }\n    },\n    methods: {\n      async loadCodemirror () {\n        await this.$nextTick()\n        if (this.$refs.files && this.activeFile.id) {\n          const modeMap = {\n            VUE: 'vue',\n            HTML: 'htmlmixed',\n            JS: 'javascript',\n            STYL: 'css',\n            CSS: 'css',\n            SVG: 'xml',\n            JSON: 'javascript',\n            MD: 'markdown'\n          }\n\n          var myCodeMirror = CodeMirror(this.$refs.files, {\n            value: this.activeFile.contents,\n            mode: {name: modeMap[this.activeFile.extension], json: true},\n            theme: 'darcula',\n            lineNumbers: true,\n            foldGutter: true,\n            gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter']\n          })\n        }\n      },\n      openFile (file) {\n        this.$store.commit('SET_ACTIVE_FILE', file)\n      },\n      closeFile (file) {\n        this.$store.commit('CLOSE_FILE', file)\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n\n  .editor\n    background: $darkgrey\n\n    .no-files\n      position: absolute;\n      left: 50%;\n      top: 50%;\n      color: white;\n      transform: translate(-50%, -50%);\n      user-select none\n\n      & > div:not(:last-of-type)\n        padding-bottom 20px\n\n      &__txt\n        color #8f8f8f\n\n      &__key\n        color #589DF6\n        margin-left 20px\n\n  .tab-bar\n    background: $grey\n    border: 1px solid $lightborder\n    border-left: none\n    border-right: none\n    overflow: hidden\n\n    .tabs\n      display: flex\n      justify-content: flex-start\n      align-items: stretch\n      overflow: scroll;\n      margin-bottom: -17px;\n      padding-bottom: 17px;\n      overflow-x: auto;\n      overflow-y: hidden;\n      height: 42px\n\n</style>\n"
                },
                {
                  "id": "CKTaSFfRR3",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "left-sidebar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/left-sidebar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"left-sidebar\">\n    <project-view/>\n  </div>\n</template>\n\n<script>\n  import ProjectView from '@/components/project-view'\n  import useMakeResizeable from '@/hooks/make-resizeable'\n  import store from '@/store'\n  export default {\n    components: {\n      ProjectView\n    },\n    hooks () {\n      useMakeResizeable({\n        selector: '.left-sidebar',\n        edge: 'right',\n        defaultwidth: 225,\n        onResize: (newWidth) => {\n          store.commit('UPDATE_LEFT_SIDEBAR_WIDTH', newWidth)\n          store.commit('SET_ALLOW_TEXT_SELECT', true)\n        },\n        onDone: () => {\n          store.commit('SET_ALLOW_TEXT_SELECT', false)\n        }\n      })\n    },\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  @import \"~@/stylus/variables\"\n  .left-sidebar\n    background $grey\n    overflow: auto;\n    width: 100%;\n</style>\n"
                },
                {
                  "id": "1avc6OBgiI",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "left-tab-bar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/left-tab-bar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"left-tab-bar__wrapper\">\n    <div class=\"left-tab-bar\">\n      <panel-tab class=\"bar-tab\" name=\"1:Project\" :show-close=\"false\" :active=\"projectViewVisible\" @click.native=\"toggleProjectView\">\n        <template slot=\"icon\"><i class=\"fa fa-folder\"></i></template>\n      </panel-tab>\n    </div>\n  </div>\n</template>\n\n<script>\n  import PanelTab from '../panel-tab'\n  export default {\n    components: {PanelTab},\n    computed: {\n      projectViewVisible () {\n        return this.$store.state.layout.leftSidebar.visible\n      }\n    },\n    methods: {\n      toggleProjectView () {\n        this.$store.commit('SET_LEFT_SIDEBAR_VISIBILITY', !this.$store.state.layout.leftSidebar.visible)\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n  .left-tab-bar\n    position: absolute;\n    top: 0;\n    right: 0;\n    transform-origin: bottom right;\n    transform: translateY(-22px) rotate(-90deg);\n\n    &__wrapper\n      position relative\n      border-right 1px solid $lightborder\n\n    .fa.fa-folder\n      transform: rotate(90deg) translateX(2px);\n</style>\n"
                },
                {
                  "id": "B4enkGNJZa",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "path-bar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/path-bar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"path-bar\">\n    <template v-for=\"part in pathFolders\">\n      <i class=\"fa fa-folder\"></i>\n      <span>{{part}}</span>\n      <i class=\"fas fa-chevron-right\"></i>\n    </template>\n    <file-icon style=\"height: 16px; width: 16px;\" :extension=\"activeFile.extension\" :color=\"activeFile.iconColor\"></file-icon>\n    <span>{{ activeFile.name }}</span>\n  </div>\n</template>\n\n<script>\n  import FileIcon from '../file-icon'\n  export default {\n    name: 'path-bar',\n    components: {FileIcon},\n    computed: {\n      activeFile () {\n        return this.$store.state.activeFile\n      },\n      path () {\n        return (this.activeFile.path || '').split('/')\n      },\n      pathFolders () {\n        return this.path.slice(0, this.path.length - 1)\n      }\n    },\n    methods: {\n\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n@import \"~@/stylus/variables\"\n.path-bar\n  display flex\n  align-items center\n  color $lightgrey\n  font-weight 300\n  letter-spacing 0.4px\n  font-size 12px\n  height 25px\n  padding-left 7px\n  border-top 1px solid $lightborder\n\n  & > span:first-of-type\n    font-weight 700\n\n  & > *\n    padding-left 3px\n\n  .fa.fa-folder\n    color #87939a\n    font-size 15px\n\n  .fas.fa-chevron-right\n    color $lightgrey\n</style>\n"
                },
                {
                  "id": "Idegic6LvS",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "right-sidebar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/right-sidebar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"right-sidebar\">\n\n  </div>\n</template>\n\n<script>\n  import useMakeResizeable from '@/hooks/make-resizeable'\n  import store from '@/store'\n  export default {\n    hooks () {\n      useMakeResizeable({\n        selector: '.right-sidebar',\n        edge: 'left',\n        defaultwidth: 225,\n        onResize: (newWidth) => {\n          store.commit('UPDATE_RIGHT_SIDEBAR_WIDTH', newWidth)\n          store.commit('SET_ALLOW_TEXT_SELECT', true)\n        },\n        onDone: () => {\n          store.commit('SET_ALLOW_TEXT_SELECT', false)\n        }\n      })\n    },\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  @import \"~@/stylus/variables\"\n  .right-sidebar\n    background $grey\n</style>\n"
                },
                {
                  "id": "n70O55iHCB",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "right-tab-bar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/right-tab-bar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n  <div class=\"right-tab-bar__wrapper\">\n    <div class=\"right-tab-bar\">\n      <panel-tab class=\"bar-tab\" name=\"Database\" :active=\"databaseViewVisible\" :show-close=\"false\" @click.native=\"toggleProjectView\">\n        <template slot=\"icon\">\n          <i class=\"fas fa-database\"></i>\n        </template>\n      </panel-tab>\n    </div>\n  </div>\n</template>\n\n<script>\n  import PanelTab from '../panel-tab'\n  export default {\n    components: {PanelTab},\n    computed: {\n      databaseViewVisible () {\n        return this.$store.state.layout.rightSidebar.visible\n      }\n    },\n    methods: {\n      toggleProjectView () {\n        this.$store.commit('SET_RIGHT_SIDEBAR_VISIBILITY', !this.$store.state.layout.rightSidebar.visible)\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n  .right-tab-bar\n    position: absolute;\n    top: 0;\n    left: 0;\n    transform-origin: bottom left;\n    transform: translateY(-22px) rotate(90deg);\n\n    &__wrapper\n      position relative\n      border-left 1px solid $lightborder\n\n    .fas.fa-database\n      transform: rotate(-90deg) translateX(-2px);\n\n</style>\n"
                },
                {
                  "id": "RPjNKMmovG",
                  "depth": 4,
                  "extension": "VUE",
                  "name": "tool-bar.vue",
                  "type": "text",
                  "path": "codylandry/src/components/layout/tool-bar.vue",
                  "iconColor": "#579242",
                  "contents": "<template>\n<div class=\"tool-bar\">\n  <div class=\"icon-wrapper\"><i class=\"fas fa-folder-open\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-save\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-sync-alt\"></i></div>\n  <span class=\"bar\">|</span>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-long-arrow-alt-left\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-long-arrow-alt-right\"></i></div>\n  <span class=\"bar\">|</span>\n  <div class=\"run-configuration\">\n    <i class=\"fab fa-js\"></i>\n    <span>serve</span>\n    <i class=\"fas fa-caret-down\"></i>\n  </div>\n  <div class=\"icon-wrapper\"><i class=\"color-green fas fa-redo\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"color-green fas fa-bug\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"color-red fas fa-stop\"></i></div>\n  <span class=\"bar\">|</span>\n  <div class=\"icon-wrapper\"><i class=\"color-blue rotate-neg-45 fas fa-long-arrow-alt-left\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"color-green fas fa-check\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-exchange-alt\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"far fa-clock\"></i></div>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-undo\"></i></div>\n  <span class=\"bar\">|</span>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-wrench\"></i></div>\n  <span class=\"bar\">|</span>\n  <div class=\"icon-wrapper\"><i class=\"fas fa-search\"></i></div>\n</div>\n</template>\n\n<script>\n  export default {\n    name: 'tool-bar'\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n@import \"~@/stylus/variables\"\n.tool-bar\n  color $lightgrey\n  display flex\n  height 25px\n  align-items center\n  font-size 13px\n  padding-left 10px\n\n  .run-configuration\n    padding: 2px 5px;\n    border-radius: 3px;\n    display: flex;\n    align-items: center;\n    border 1px solid #52585b\n    margin-left 6px\n\n    .fab.fa-js\n      padding-right: 6px;\n      color #feca29\n\n    .fas.fa-caret-down\n      padding-left: 6px;\n\n  .icon-wrapper\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 25px;\n    padding: 3px 0;\n    border-radius: 4px;\n\n    &:hover\n      background #52585b\n\n  .bar\n    padding-right 0\n    padding-left 0\n    font-size: 20px;\n    font-weight: 100;\n    color: #d3d3d336;\n\n  & > *\n    padding-left 10px\n\n  .color-green\n    color #499c54\n\n  .color-red\n    color #c75450\n\n  .color-blue\n    color #3592c4\n\n  .rotate-neg-45\n    transform: rotate(-45deg);\n    font-size: 17px;\n\n</style>\n"
                }
              ]
            },
            {
              "id": "azzNvCUme1",
              "depth": 3,
              "extension": "VUE",
              "name": "panel-tab.vue",
              "type": "text",
              "path": "codylandry/src/components/panel-tab.vue",
              "iconColor": "#579242",
              "contents": "<template>\n  <div class=\"tab\" :class=\"classes\">\n    <slot name=\"icon\">\n      <file-icon class=\"tab__icon\" style=\"height: 14px; width: 14px\" :color=\"color\" :extension=\"extension\"/>\n    </slot>\n    <span class=\"tab__name\">{{ name }}</span>\n    <i v-if=\"showClose\" @click.stop=\"$emit('close')\" class=\"fa fa-times tab__close\"></i>\n  </div>\n</template>\n\n<script>\n  import FileIcon from './file-icon'\n  export default {\n    components: {\n      FileIcon\n    },\n    props: {\n      name: {\n        type: String,\n        required: true\n      },\n      color: {\n        type: String\n      },\n      extension: {\n        type: String\n      },\n      active: {\n        type: Boolean\n      },\n      showClose: {\n        type: Boolean,\n        'default': true\n      }\n    },\n    computed: {\n      classes () {\n        return [\n          this.active ? 'tab--selected' : '',\n        ]\n      }\n    }\n  }\n</script>\n\n<style lang=\"stylus\" scoped>\n  @import \"~@/stylus/variables\"\n  .tab\n    display: flex\n    user-select none\n    align-items: center\n    justify-content: space-around\n    color: $lightgrey\n    font-weight: 400\n    font-size: 13px\n    letter-spacing: 0.4px\n    padding: 3px 8px\n    white-space nowrap\n    height 25px\n\n    &__icon\n      display none\n\n    &__close\n      display none\n\n    &__name\n      padding-left 5px\n      font-size: 11px\n      position: relative\n      top: 2px\n\n    &.bar-tab\n      border-bottom: 3px solid transparent\n      padding 3px 10px\n\n      ^[0].tab--selected\n        background rgba(0, 0, 0, 0.30)\n\n\n      .tab__close\n        display block\n        font-size: 11px\n        margin-left: 5px\n        color: #5e696e\n        position: relative\n        top: 1px\n\n    &.editor-tab\n      border-right: 1px solid $lightborder\n\n      &.tab--selected\n        background: rgb(80, 86, 88)\n        border-bottom: 3px solid $blue\n\n      &.tab:not(.tab--selected)\n        border-bottom: 3px solid transparent\n\n      .tab__icon\n        display block\n        margin-right: 5px\n\n      .tab__close\n        display block\n        font-size: 11px\n        margin-left: 5px\n        color: #5e696e\n        position: relative\n        top: 1px\n\n      .tab__name\n        padding-left 5px\n        font-size: 11px\n        position: relative\n        top: 2px\n</style>\n"
            },
            {
              "id": "p6ArNgnnHM",
              "depth": 3,
              "extension": "VUE",
              "name": "project-view.vue",
              "type": "text",
              "path": "codylandry/src/components/project-view.vue",
              "iconColor": "#579242",
              "contents": "<template>\n  <div class=\"project-view\">\n    <div class=\"file-opts\">\n      <div class=\"tabs\">\n        <div class=\"tab\"></div>\n      </div>\n    </div>\n    <div class=\"file-tree\">\n      <file-tree-item\n          :key=\"fileSystem.id\"\n          :item=\"fileSystem\"\n      ></file-tree-item>\n    </div>\n  </div>\n</template>\n\n<script>\n  import FileTreeItem from './file-tree-item'\n  import useMakeResizeable from '../hooks/make-resizeable'\n  import store from '../store'\n\n  export default {\n    components: {FileTreeItem},\n    computed: {\n      fileSystem () {\n        return this.$store.state.fileSystem\n      }\n    },\n    methods: {\n      itemContents (item) {\n        return Array.isArray(item.contents)\n          ? item.contents\n          : []\n      },\n      filterLinks (contents) {\n        return contents.filter(item => !item.name.startsWith('.'))\n      }\n    },\n    hooks () {\n      useMakeResizeable({\n        selector: '.file-tree',\n        edge: 'right',\n        defaultwidth: 225,\n        onResize: (newWidth) => {\n          store.commit('UPDATE_LEFT_SIDEBAR_WIDTH', newWidth)\n          store.commit('SET_ALLOW_TEXT_SELECT', true)\n        },\n        onDone: () => {\n          store.commit('SET_ALLOW_TEXT_SELECT', false)\n        }\n      })\n    },\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n\n  .project-view\n    max-height 100%\n\n  .file-opts\n    background: $grey\n    border: 1px solid $darkborder\n\n  .file-tree\n    padding: 2px\n    overflow: visible\n    font-weight: 400\n    font-size: 13px\n    letter-spacing: 0.4px\n    background $grey\n    position: relative\n    height: 100%\n\n    &__handle\n      position: absolute;\n      height: 100%;\n      right: 0;\n      top: 0;\n      width: 4px;\n      cursor ew-resize\n</style>\n"
            },
            {
              "id": "tQVKhso8cg",
              "depth": 3,
              "extension": "VUE",
              "name": "terminal.vue",
              "type": "text",
              "path": "codylandry/src/components/terminal.vue",
              "iconColor": "#579242",
              "contents": "<template>\n  <div class=\"terminal\">\n    <div class=\"tabs\">\n      <span style=\"margin-right: 10px\">Terminal:</span>\n      <panel-tab class=\"bar-tab\" name=\"Local\" extension=\"\" color=\"blue\" active @click.native=\"toggleProjectView\"></panel-tab>\n      <div class=\"icon-wrapper\"><i class=\"fas fa-plus\"></i></div>\n    </div>\n    <div class=\"js-terminal__wrapper\">\n      <div id=\"js-terminal\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import PanelTab from './panel-tab'\n  import { Terminal } from '@/lib/jsterm'\n  import { commands } from '@/lib/commands'\n\n  export default {\n    components: {\n      PanelTab\n    },\n    async mounted () {\n      await this.$nextTick()\n      const prompt = (cwd) => `<span class=\"user\">cody</span>@<span class=\"host\">codylandry.com</span>:<span class=\"cwd\">${cwd}</span>$ `\n\n      const term = new Terminal(\n        {prompt},\n        this.$store.state.fileSystem,\n        commands\n      )\n\n      term.begin(document.getElementById('js-terminal'))\n    }\n  }\n</script>\n\n<style lang=\"stylus\">\n  @import \"~@/stylus/variables\"\n  .js-terminal__wrapper\n    overflow auto\n\n  .terminal\n    background $darkgrey\n    color $lightgrey\n    max-height 100%\n    font-weight 300\n    font-size 13px\n    display: flex;\n    flex-direction: column;\n\n    .tabs\n      background $blue-tab-bar\n      width 100%\n      min-height 25px\n      height 25px\n      display flex\n      align-items center\n      padding 0 10px\n      font-weight 400\n      border 1px solid $darkborder\n\n      .icon-wrapper\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 25px;\n        padding: 3px 0;\n        border-radius: 4px;\n        margin-left 10px\n\n        &:hover\n          background #52585b\n\n  #js-terminal *\n    font-family: \"Fira Code\", monospace\n    font-feature-settings: \"calt\" 1\n    font-weight 200\n    font-size 13px\n    margin-top 4px\n\n  .jsterm a {\n    color: #E0E0E0;\n    text-decoration: none;\n  }\n\n  .jsterm a:hover {\n    text-decoration: underline;\n  }\n\n  div.jsterm {\n    font-family: \"Fira Code\", monospace;\n    font-size: 16px;\n    color: #E0E0E0;\n    white-space: pre-wrap;\n    padding: 10px;\n  }\n\n  div.jsterm .host, div.jsterm .host a {\n    color: #479cf0;\n    font-weight: bold;\n  }\n\n  div.jsterm .user, div.jsterm .user a {\n    color: #f96966;\n    font-weight: bold;\n  }\n\n  div.jsterm .cwd, div.jsterm .cwd a {\n    color: #ffff55;\n    font-weight: bold;\n  }\n\n  div.jsterm .dir, div.jsterm .dir a {\n    color: #479cf0;\n    font-weight: bold;\n  }\n\n  div.jsterm .link, div.jsterm .link a {\n    color: #479cf0;\n    font-weight: bold;\n  }\n\n  div.jsterm .exec, div.jsterm .exec a {\n    color: #55ff55;\n    font-weight: bold;\n  }\n\n  div.jsterm .img, div.jsterm .img a {\n    color: #ff55ff;\n    font-weight: bold;\n  }\n\n  #blinker {\n    line-height: .9em;\n  }\n\n</style>\n"
            }
          ]
        },
        {
          "name": "hooks",
          "type": "dir",
          "id": "00ZzFPgJs5",
          "depth": 2,
          "path": "codylandry/src/hooks",
          "expanded": false,
          "contents": [
            {
              "id": "5Y5FUD1AAj",
              "depth": 3,
              "extension": "JS",
              "name": "make-resizeable.js",
              "type": "text",
              "path": "codylandry/src/hooks/make-resizeable.js",
              "iconColor": "#BD8E3E",
              "contents": "import {\n  useState,\n  useMounted,\n  useDestroyed\n} from 'vue-hooks'\n\nimport Vue from 'vue'\n\n\nexport default function makeResizeable (opts) {\n  const {\n    selector,\n    edge,\n    barThickness = 6\n  } = opts\n  const edges = {\n    top: 'height',\n    bottom: 'height',\n    left: 'width',\n    right: 'width'\n  }\n\n  const cursors = { height: 'ns-resize', width: 'ew-resize' }\n  const dimension = edges[edge]\n  const otherDimension = dimension === 'width' ? 'height' : 'width'\n  const cursor = cursors[dimension]\n  const anchor = dimension === 'width' ? 'top' : 'left'\n\n  const [ state, setState ] = useState({\n    [dimension]: opts[`default${dimension}`],\n    isDragging: false\n  })\n\n  const createDragbar = () => {\n    const element = document.querySelector(selector)\n    element.style.position = 'relative'\n    const bar = document.createElement('div')\n    bar.style.cursor = cursor\n    bar.style.position = 'absolute'\n    bar.style[anchor] = '0'\n    bar.style[edge] = '0'\n    bar.style[otherDimension] = '100%'\n    bar.style[dimension] = `${barThickness}px`\n    element.appendChild(bar)\n    return bar\n  }\n\n  const getApplicableVector = (e) => {\n    const { screenX: x, screenY: y } = e\n    const positions = {\n      top: y,\n      bottom: y,\n      left: x,\n      right: x\n    }\n    return positions[edge]\n  }\n\n  const mousedownHandler = (mousedownEvent) => {\n    const element = mousedownEvent.target.parentNode\n    const vals = element.getBoundingClientRect()\n    const initialDimension = vals[dimension]\n    const initialValue = getApplicableVector(mousedownEvent)\n\n    const mouseMoveHandler = (mousemoveEvent) => {\n      const newValue = getApplicableVector(mousemoveEvent)\n\n      const dimensionModifiers = {\n        top: initialValue - newValue + initialDimension,\n        bottom: newValue - initialValue + initialDimension,\n        left: initialValue - newValue + initialDimension,\n        right: newValue - initialValue + initialDimension\n      }\n      const newDimensionValue = dimensionModifiers[edge]\n\n      setState({\n        ...state,\n        [dimension]: newDimensionValue,\n        isDragging: true,\n      })\n\n      if (opts.onResize) {\n        opts.onResize(newDimensionValue)\n      } else {\n        element.style[dimension] = newDimensionValue\n      }\n    }\n\n    const mouseUpHandler = () => {\n      document.removeEventListener('mousemove', mouseMoveHandler)\n      document.removeEventListener('mouseup', mouseUpHandler)\n      setState({ ...state, isDragging: false})\n\n      if (opts.onDone) {\n        opts.onDone(state[dimension])\n      }\n    }\n\n    document.addEventListener('mousemove', mouseMoveHandler)\n    document.addEventListener('mouseup', mouseUpHandler)\n  }\n\n  useMounted(async () => {\n    await Vue.nextTick()\n    const element = document.querySelector(selector)\n    element.style[dimension] = state[dimension]\n    const bar = createDragbar()\n    setState({...state, bar})\n    bar.addEventListener('mousedown', mousedownHandler)\n  })\n\n  useDestroyed(() => {\n    const { bar } = state\n    bar.removeEventListener(mousedownHandler)\n  })\n}\n"
            }
          ]
        },
        {
          "name": "lib",
          "type": "dir",
          "id": "SKpWkcL4x0",
          "depth": 2,
          "path": "codylandry/src/lib",
          "expanded": false,
          "contents": [
            {
              "id": "7XKZ1dXVXV",
              "depth": 3,
              "extension": "JS",
              "name": "commands.js",
              "type": "text",
              "path": "codylandry/src/lib/commands.js",
              "iconColor": "#BD8E3E",
              "contents": "import { Auth } from 'aws-amplify'\n\nasync function prompt (term, promptText) {\n  term.write(`\\n${promptText}: `)\n  return await new Promise(resolve => {\n    term.newStdout()\n    term.scroll()\n    term.returnHandler = () => {\n      resolve(term.stdout().innerHTML)\n    }\n  })\n}\n\nfunction writeError (term, message) {\n  term.write(`\n    <pre style=\"color: red; white-space: pre-wrap;\">\n      ${message}\n    </pre>\n  `)\n}\n\nexport const commands = {\n  cat (argv, cb) {\n    var filenames = this._terminal.parseArgs(argv).filenames\n    var stdout\n\n    this._terminal.scroll()\n    if (!filenames.length) {\n      this._terminal.returnHandler = function () {\n        stdout = this.stdout()\n        if (!stdout)\n          return\n        stdout.innerHTML += '<br>' + stdout.innerHTML + '<br>'\n        this.scroll()\n        this.newStdout()\n      }.bind(this._terminal)\n      return\n    }\n    filenames.forEach(function (filename, i) {\n      var entry = this._terminal.getEntry(filename)\n\n      if (!entry)\n        this._terminal.write('cat: ' + filename + ': No such file or directory')\n      else if (entry.type === 'dir')\n        this._terminal.write('cat: ' + filename + ': Is a directory.')\n      else\n        this._terminal.write(entry.contents)\n      if (i !== filenames.length - 1)\n        this._terminal.write('<br>')\n    }, this)\n    cb()\n  },\n\n  cd (argv, cb) {\n    var filename = this._terminal.parseArgs(argv).filenames[0],\n      entry\n\n    if (!filename)\n      filename = '~'\n    entry = this._terminal.getEntry(filename)\n    if (!entry)\n      this._terminal.write('bash: cd: ' + filename + ': No such file or directory')\n    else if (entry.type !== 'dir')\n      this._terminal.write('bash: cd: ' + filename + ': Not a directory.')\n    else\n      this._terminal.cwd = entry\n    cb()\n  },\n\n  ls (argv, cb) {\n    var result = this._terminal.parseArgs(argv),\n      args = result.args,\n      filename = result.filenames[0],\n      entry = filename ? this._terminal.getEntry(filename) : this._terminal.cwd,\n      maxLen = 0,\n      writeEntry\n\n    writeEntry = function (e, str) {\n      this.writeLink(e, str)\n      if (args.indexOf('l') > -1) {\n        if ('description' in e)\n          this.write(' - ' + e.description)\n        this.write('<br>')\n      } else {\n        // Make all entries the same width like real ls. End with a normal\n        // space so the line breaks only after entries.\n        this.write(Array(maxLen - e.name.length + 2).join('&nbsp') + ' ')\n      }\n    }.bind(this._terminal)\n\n    if (!entry)\n      this._terminal.write('ls: cannot access ' + filename + ': No such file or directory')\n    else if (entry.type === 'dir') {\n      var dirStr = this._terminal.dirString(entry)\n      maxLen = entry.contents.reduce(function (prev, cur) {\n        return Math.max(prev, cur.name.length)\n      }, 0)\n\n      for (var i in entry.contents) {\n        var e = entry.contents[i]\n        if (args.indexOf('a') > -1 || e.name[0] !== '.')\n          writeEntry(e, dirStr + '/' + e.name)\n      }\n    } else {\n      maxLen = entry.name.length\n      writeEntry(entry, filename)\n    }\n    cb()\n  },\n\n  gimp (argv, cb) {\n    var filename = this._terminal.parseArgs(argv).filenames[0],\n      entry,\n      imgs\n\n    if (!filename) {\n      this._terminal.write('gimp: please specify an image file.')\n      cb()\n      return\n    }\n\n    entry = this._terminal.getEntry(filename)\n    if (!entry || entry.type !== 'img') {\n      this._terminal.write('gimp: file ' + filename + ' is not an image file.')\n    } else {\n      this._terminal.write('<img src=\"' + entry.contents + '\"/>')\n      imgs = this._terminal.div.getElementsByTagName('img')\n      imgs[imgs.length - 1].onload = function () {\n        this.scroll()\n      }.bind(this._terminal)\n      if ('caption' in entry)\n        this._terminal.write('<br/>' + entry.caption)\n    }\n    cb()\n  },\n\n  clear (argv, cb) {\n    this._terminal.div.innerHTML = ''\n    cb()\n  },\n\n  sudo (argv, cb) {\n    var count = 0\n    this._terminal.returnHandler = function () {\n      if (++count < 3) {\n        this.write('<br/>Sorry, try again.<br/>')\n        this.write('[sudo] password for ' + this.config.username + ': ')\n        this.scroll()\n      } else {\n        this.write('<br/>sudo: 3 incorrect password attempts')\n        cb()\n      }\n    }.bind(this._terminal)\n    this._terminal.write('[sudo] password for ' + this._terminal.config.username + ': ')\n    this._terminal.scroll()\n  },\n\n  async login (argv, cb) {\n    const term = this._terminal\n    const username = await prompt(term, 'Username')\n    const password = await prompt(term, 'Password')\n\n    try {\n      await Auth.signIn({username, password})\n      term.write('\\nSuccess!')\n    } catch (err) {\n      if (err.code === 'UserNotConfirmedException') {\n        term.write('\\nEmail not confirmed. Resending verification email...')\n        await Auth.resendSignUp(username)\n        const code = await prompt(term, 'Enter Verification Code')\n        await Auth.confirmSignUp(username, code)\n        term.write(`\\nConfirmed!`)\n        return cb()\n      }\n      writeError(term, err.message)\n    }\n    cb()\n  },\n\n  async passwd (argv, cb) {\n    const term = this._terminal\n    try {\n      const user = await Auth.currentAuthenticatedUser()\n      const oldPassword = await prompt(term, 'Old Password')\n      const newPassword = await prompt(term, 'New Password')\n      await Auth.changePassword(user, oldPassword, newPassword)\n    } catch (err) {\n      term.write(`\\n${err}`)\n    }\n    cb()\n  },\n\n  async logout (argv, cb) {\n    const term = this._terminal\n    try {\n      await Auth.signOut()\n      await new Promise(res => setTimeout(res, 1000))\n      term.write('\\nLogged out')\n    } catch (err) {\n      term.write(`\\n${err.message}`)\n    }\n    cb()\n  },\n\n  async useradd (argv, cb) {\n    const term = this._terminal\n\n    const email = await prompt(term, 'Email Address')\n    const username = await prompt(term, 'Username')\n    let password1 = await prompt(term, 'Password')\n    let password2 = await prompt(term, 'Repeat Password')\n\n    while (password1 !== password2) {\n      term.write('\\nPasswords do not match.  Try Again.')\n      password1 = await prompt(term, 'Password')\n      password2 = await prompt(term, 'Repeat Password')\n    }\n\n    try {\n      await Auth.signUp({ username, password: password1, attributes: { email } })\n      term.write(`\\nsuccess`)\n    } catch (err) {\n      writeError(term,`\\n${err.message}`)\n      cb()\n      return\n    }\n\n    try {\n      const code = await prompt(term,'Enter Confirmation Code')\n      await Auth.confirmSignUp(username, code)\n    } catch (err) {\n      writeError(term,`\\n${err.message}`)\n    }\n    cb()\n  },\n\n  tree (argv, cb) {\n    var term = this._terminal,\n      home\n\n    function writeTree (dir, level) {\n      dir.contents.forEach(function (entry) {\n        var str = ''\n\n        if (entry.name.startsWith('.'))\n          return\n        for (var i = 0; i < level; i++)\n          str += '|  '\n        str += '|&mdash;&mdash;'\n        term.write(str)\n        term.writeLink(entry, term.dirString(dir) + '/' + entry.name)\n        term.write('<br>')\n        if (entry.type === 'dir')\n          writeTree(entry, level + 1)\n      })\n    }\n\n    home = this._terminal.getEntry('~')\n    this._terminal.writeLink(home, '~')\n    this._terminal.write('<br>')\n    writeTree(home, 0)\n    cb()\n  },\n\n  help (argv, cb) {\n    this._terminal.write(\n      'You can navigate either by clicking on anything that ' +\n      '<a href=\"javascript:void(0)\">underlines</a> when you put your mouse ' +\n      'over it, or by typing commands in the terminal. Type the name of a ' +\n      '<span class=\"exec\">link</span> to view it. Use \"cd\" to change into a ' +\n      '<span class=\"dir\">directory</span>, or use \"ls\" to list the contents ' +\n      'of that directory. The contents of a <span class=\"text\">file</span> ' +\n      'can be viewed using \"cat\". <span class=\"img\">Images</span> are ' +\n      'displayed using \"gimp\".<br><br>If there is a command you want to get ' +\n      'out of, press Ctrl+C or Ctrl+D.<br><br>')\n    this._terminal.write('Commands are:<br>')\n    for (var c in Object.keys(this._terminal.commands)) {\n      if (this._terminal.commands.hasOwnProperty(c) && !c.startsWith('_'))\n        this._terminal.write(c + '  ')\n    }\n    cb()\n  }\n}\n"
            },
            {
              "id": "MCAqm3YrL8",
              "depth": 3,
              "extension": "JS",
              "name": "jsterm.js",
              "type": "text",
              "path": "codylandry/src/lib/jsterm.js",
              "iconColor": "#BD8E3E",
              "contents": "export class Terminal {\n  constructor (config, fs, commands) {\n    this._queue = []\n    this._history = []\n    this._historyIndex = -1\n    this.loadConfig(config)\n\n    if (commands) {\n      this.loadCommands(commands)\n    }\n\n    if (fs) {\n      this.fs = fs\n      this.loadFS(fs)\n    }\n  }\n\n  loadFS (fs) {\n    this._addDirs(this.fs, this.fs)\n  }\n\n  loadCommands (commands) {\n    this.commands = commands\n    this.commands._terminal = this\n  }\n\n  loadConfig (config) {\n    this.config = config\n  }\n\n  begin (element) {\n    this.container = element || document.body\n    this.parentElement = this.container.parentElement\n    this.div = document.createElement('div')\n    this.div.classList.add('jsterm')\n    this.container.appendChild(this.div)\n\n    window.onkeydown = (e) => {\n      var key = (e.which) ? e.which : e.keyCode\n\n      if (key == 8 || key == 9 || key == 13 || key == 46 || key == 38 || key == 40 || e.ctrlKey) {\n        e.preventDefault()\n      }\n      this._handleSpecialKey(key, e)\n    }\n\n    window.onkeypress = (e) => {\n      this._typeKey((e.which) ? e.which : e.keyCode)\n    }\n\n    this.returnHandler = this._execute\n    this.cwd = this.fs\n    this._prompt()\n    this._toggleBlinker(600)\n    this._dequeue()\n  }\n\n  getCWD () {\n    return this.dirString(this.cwd)\n  }\n\n  dirString (d) {\n    let dir = d\n    let dirStr = ''\n\n    while (this._dirNamed('..', dir.contents).contents !== dir.contents) {\n      dirStr = '/' + dir.name + dirStr\n      dir = this._dirNamed('..', dir.contents)\n    }\n    return '~' + dirStr\n  }\n\n  getEntry (path) {\n    let entry\n    let parts\n\n    if (!path)\n      return null\n\n    path = path.replace(/^\\s+/, '').replace(/\\s+$/, '')\n    if (!path.length)\n      return null\n\n    entry = this.cwd\n    if (path[0] === '~') {\n      entry = this.fs\n      path = path.substring(1, path.length)\n    }\n\n    parts = path.split('/').filter(function (x) {return x})\n    for (let i = 0; i < parts.length; ++i) {\n      entry = this._dirNamed(parts[i], entry.contents)\n      if (!entry)\n        return null\n    }\n\n    return entry\n  }\n\n  write (text) {\n    const output = this.stdout()\n\n    if (!output)\n      return\n    output.innerHTML += text\n  }\n\n  defaultReturnHandler () {\n    this.returnHandler = this._execute\n  }\n\n  typeCommand (command, cb) {\n    const type = (i) => {\n      if (i === command.length) {\n        this._handleSpecialKey(13)\n        if (cb) cb()\n      } else {\n        this._typeKey(command.charCodeAt(i))\n        setTimeout(() => type(i + 1), 100)\n      }\n    }\n\n    type(0)\n  }\n\n  tabComplete (text) {\n    var parts = text.replace(/^\\s+/, '').split(' '),\n      matches = []\n    if (!parts.length)\n      return []\n\n    if (parts.length == 1) {\n      // TODO: Combine with below.\n      var pathParts = parts[0].replace(/[\\/]+/, '/').split('/'),\n        last = pathParts.pop(),\n        dir = (pathParts.length > 0) ? this.getEntry(pathParts.join('/')) : this.cwd,\n        n,\n        fullPath,\n        last,\n        dir\n\n      if (dir) {\n        for (var i in dir.contents) {\n          n = dir.contents[i].name\n          if (n.startsWith(last) && !n.startsWith('.') && n != last) {\n            if (dir.contents[i].type == 'exec')\n              matches.push(n + ' ')\n          }\n        }\n      }\n      for (var c in this.commands) {\n        // Private member.\n        if (c[0] == '_')\n          continue\n        if (c.startsWith(parts[0]) && c != parts[0])\n          matches.push(c + ' ')\n      }\n    } else {\n      fullPath = parts[parts.length - 1]\n      pathParts = fullPath.replace(/[\\/]+/, '/').split('/')\n      last = pathParts.pop()\n      dir = (pathParts.length > 0) ? this.getEntry(pathParts.join('/')) : this.cwd\n\n      if (!dir)\n        return []\n\n      for (var i in dir.contents) {\n        n = dir.contents[i].name\n        if (n.startsWith(last) && !n.startsWith('.') && n != last) {\n          if (dir.contents[i].type == 'dir')\n            matches.push(n + '/')\n          else\n            matches.push(n + ' ')\n        }\n      }\n    }\n    return matches\n  }\n\n  enqueue (command) {\n    this._queue.push(command)\n    return this\n  }\n\n  scroll () {\n     this.parentElement.scrollTo(0, this.parentElement.scrollHeight)\n  }\n\n  parseArgs (argv) {\n    var args = [],\n      filenames = [],\n      opts\n\n    for (let i = 0; i < argv.length; ++i) {\n      if (argv[i].startsWith('-')) {\n        opts = argv[i].substring(1)\n        for (var j = 0; j < opts.length; ++j)\n          args.push(opts.charAt(j))\n      } else {\n        filenames.push(argv[i])\n      }\n    }\n    return {'filenames': filenames, 'args': args}\n  }\n\n  writeLink (e, str) {\n    this.write('<span class=\"' + e.type + '\">' + this._createLink(e, str) +\n      '</span>')\n  }\n\n  stdout () {\n    return this.div.querySelector('#stdout')\n  }\n\n  newStdout () {\n    var stdout = this.stdout(),\n      newstdout = document.createElement('span')\n\n    this._resetID('#stdout')\n    newstdout.id = 'stdout'\n    stdout.parentNode.insertBefore(newstdout, stdout.nextSibling)\n  }\n\n  _createLink (entry, str) {\n    function typeLink (text, link) {\n      return '<a href=\"javascript:void(0)\" onclick=\"typeCommand(\\'' +\n        text + '\\')\">' + link + '</a>'\n    }\n\n    if (entry.type == 'dir' || entry.type == 'link') {\n      return typeLink('ls -l ' + str, entry.name)\n    } else if (entry.type == 'text') {\n      return typeLink('cat ' + str, entry.name)\n    } else if (entry.type == 'img') {\n      return typeLink('gimp ' + str, entry.name)\n    } else if (entry.type == 'exec') {\n      return '<a href=\"' + entry.contents + '\" target=\"_blank\">' +\n        entry.name + '</a>'\n    }\n  }\n\n  _dequeue () {\n    if (!this._queue.length)\n      return\n\n    this.typeCommand(this._queue.shift(), () => this._dequeue())\n  }\n\n  _dirNamed (name, dir) {\n    for (const i in dir) {\n      if (dir.hasOwnProperty(i)) {\n        if (dir[i].name === name) {\n          if (dir[i].type === 'link')\n            return dir[i].contents\n          else\n            return dir[i]\n        }\n      }\n    }\n    return null\n  }\n\n  _addDirs (curDir, parentDir) {\n    curDir.contents.forEach((entry, i, dir) => {\n      if (entry.type === 'dir') {\n        this._addDirs(entry, curDir)\n      }\n    })\n    curDir.contents.unshift({\n      'name': '..',\n      'type': 'link',\n      'contents': parentDir\n    })\n    curDir.contents.unshift({\n      'name': '.',\n      'type': 'link',\n      'contents': curDir\n    })\n  }\n\n  _toggleBlinker (timeout) {\n    var blinker = this.div.querySelector('#blinker'),\n      stdout\n\n    if (blinker) {\n      blinker.parentNode.removeChild(blinker)\n    } else {\n      stdout = this.stdout()\n      if (stdout) {\n        blinker = document.createElement('span')\n        blinker.id = 'blinker'\n        blinker.innerHTML = '&#x2588'\n        stdout.parentNode.appendChild(blinker)\n      }\n    }\n\n    if (timeout) {\n      setTimeout(() => {\n        this._toggleBlinker(timeout)\n      }, timeout)\n    }\n  }\n\n  _resetID (query) {\n    var element = this.div.querySelector(query)\n\n    if (element)\n      element.removeAttribute('id')\n  }\n\n  _prompt () {\n    var div = document.createElement('div'),\n      prompt = document.createElement('span'),\n      command = document.createElement('span')\n\n    this._resetID('#currentPrompt')\n    this.div.appendChild(div)\n\n    prompt.classList.add('prompt')\n    prompt.id = 'currentPrompt'\n    prompt.innerHTML = this.config.prompt(this.getCWD(), this.config.username)\n    div.appendChild(prompt)\n\n    this._resetID('#stdout')\n    command.classList.add('command')\n    command.id = 'stdout'\n    div.appendChild(command)\n    this._toggleBlinker(0)\n    this.scroll()\n  }\n\n  _typeKey (key) {\n    var stdout = this.stdout()\n\n    if (!stdout || key < 0x20 || key > 0x7E || key == 13 || key == 9)\n      return\n\n    stdout.innerHTML += String.fromCharCode(key)\n  }\n\n  _handleSpecialKey (key, e) {\n    var stdout = this.stdout(),\n      parts,\n      pathParts\n\n    if (!stdout)\n      return\n    // Backspace/delete.\n    if (key == 8 || key == 46)\n      stdout.innerHTML = stdout.innerHTML.replace(/.$/, '')\n    // Enter.\n    else if (key == 13)\n      this.returnHandler(stdout.innerHTML)\n    // Up arrow.\n    else if (key == 38) {\n      if (this._historyIndex < this._history.length - 1)\n        stdout.innerHTML = this._history[++this._historyIndex]\n      // Down arrow.\n    } else if (key == 40) {\n      if (this._historyIndex <= 0) {\n        if (this._historyIndex == 0)\n          this._historyIndex--\n        stdout.innerHTML = ''\n      } else if (this._history.length)\n        stdout.innerHTML = this._history[--this._historyIndex]\n      // Tab.\n    } else if (key == 9) {\n      let matches = this.tabComplete(stdout.innerHTML)\n      if (matches.length) {\n        parts = stdout.innerHTML.split(' ')\n        pathParts = parts[parts.length - 1].split('/')\n        pathParts[pathParts.length - 1] = matches[0]\n        parts[parts.length - 1] = pathParts.join('/')\n        stdout.innerHTML = parts.join(' ')\n      }\n      // Ctrl+C, Ctrl+D.\n    } else if ((key == 67 || key == 68) && e.ctrlKey) {\n      if (key == 67)\n        this.write('^C')\n      this.defaultReturnHandler()\n      this._prompt()\n      // Ctrl+L\n    } else if (key == 76 && e.ctrlKey) {\n      var buffer = stdout.innerHTML\n      this.commands.clear([], () => {\n        this._prompt()\n        stdout.innerHTML = buffer\n      })\n    }\n  }\n\n  _execute (fullCommand) {\n    var output = document.createElement('div'),\n      stdout = document.createElement('span'),\n      parts = fullCommand.split(' ').filter(function (x) { return x }),\n      command = parts[0],\n      args = parts.slice(1, parts.length),\n      entry = this.getEntry(fullCommand)\n\n    this._resetID('#stdout')\n    stdout.id = 'stdout'\n    output.appendChild(stdout)\n    this.div.appendChild(output)\n\n    if (command && command.length) {\n      if (command in this.commands) {\n        this.commands[command](args, () => {\n          this.defaultReturnHandler()\n          this._prompt()\n        })\n      } else if (entry && entry.type == 'exec') {\n        window.open(entry.contents, '_blank')\n        this._prompt()\n      } else {\n        this.write(command + ': command not found')\n        this._prompt()\n      }\n    } else {\n      this._prompt()\n    }\n    if (fullCommand.length)\n      this._history.unshift(fullCommand)\n    this._historyIndex = -1\n  }\n}\n"
            }
          ]
        },
        {
          "id": "L8qoyZojSm",
          "depth": 2,
          "extension": "JS",
          "name": "main.js",
          "type": "text",
          "path": "codylandry/src/main.js",
          "iconColor": "#BD8E3E",
          "contents": "import Vue from 'vue'\nimport App from './App.vue'\nimport store from './store'\nimport Amplify, { Auth } from 'aws-amplify'\nimport awsmobile from './aws-exports'\nimport { hooks } from 'vue-hooks'\nimport './stylus/main.styl'\n\nAmplify.configure(awsmobile)\nVue.config.productionTip = false\n\nVue.use(hooks)\n\nnew Vue({\n  store,\n  render: h => h(App)\n}).$mount('#app')\n"
        },
        {
          "id": "H9svlOkaNi",
          "depth": 2,
          "extension": "JS",
          "name": "store.js",
          "type": "text",
          "path": "codylandry/src/store.js",
          "iconColor": "#BD8E3E",
          "contents": "import Vue from 'vue'\nimport Vuex from 'vuex'\nimport _ from 'lodash'\nimport flatted from 'flatted/esm'\nimport fileSystem from './file-system.json'\n\nVue.use(Vuex)\n\nconst LOCAL_STORAGE_KEY = 'vuex-state'\n\nconst writeToLocalStorage = _.debounce((mutation, state) => {\n  localStorage.setItem(LOCAL_STORAGE_KEY, flatted.stringify(state))\n}, 1000)\n\nconst localStoragePlugin = store => {\n  store.subscribe(writeToLocalStorage)\n}\n\nfunction getFileByPath (path) {\n  let [_, ...pathArray] = path.split('/')\n  let next = fileSystem\n  for (const segment of pathArray) {\n    next = next.contents.find(f => f.name === segment)\n  }\n  return next\n}\n\nconst initialActiveFile = getFileByPath('~/README.md')\n\nconst initialState = {\n  fileSystem,\n  layout: {\n    leftSidebar: {\n      width: 225,\n      visible: true\n    },\n    bottomBar: {\n      height: 100,\n      visible: true\n    },\n    rightSidebar: {\n      width: 225,\n      visible: false\n    }\n  },\n  openFiles: [initialActiveFile],\n  activeFile: initialActiveFile,\n  disableTextSelect: false,\n}\n\nfunction getState () {\n  const localStorageState = localStorage.getItem(LOCAL_STORAGE_KEY)\n  if (localStorageState) {\n    const localStorageState_ = flatted.parse(localStorageState)\n\n    if (localStorageState_.fileSystem.id !== fileSystem.id) {\n      return initialState\n    }\n\n    return localStorageState_\n  }\n  return initialState\n}\n\nexport default new Vuex.Store({\n  plugins: [localStoragePlugin],\n  state: getState(),\n  mutations: {\n    UPDATE_LEFT_SIDEBAR_WIDTH (state, newWidth) {\n      Vue.set(state.layout.leftSidebar, 'width', newWidth)\n    },\n    UPDATE_RIGHT_SIDEBAR_WIDTH (state, newWidth) {\n      Vue.set(state.layout.rightSidebar, 'width', newWidth)\n    },\n    UPDATE_BOTTOM_BAR_HEIGHT (state, newHeight) {\n      Vue.set(state.layout.bottomBar, 'height', newHeight)\n    },\n    SET_LEFT_SIDEBAR_VISIBILITY (state, val) {\n      Vue.set(state.layout.leftSidebar, 'visible', !!val)\n    },\n    SET_RIGHT_SIDEBAR_VISIBILITY (state, val) {\n      Vue.set(state.layout.rightSidebar, 'visible', !!val)\n    },\n    SET_BOTTOM_BAR_VISIBILITY (state, val) {\n      Vue.set(state.layout.bottomBar, 'visible', !!val)\n    },\n    SET_ALLOW_TEXT_SELECT (state, val) {\n      Vue.set(state, 'disableTextSelect', !!val)\n    },\n    SET_ACTIVE_FILE (state, file) {\n      Vue.set(state, 'activeFile', file)\n    },\n    OPEN_FILE (state, file) {\n      if (!state.openFiles.find(f => f.id === file.id)) {\n        state.openFiles.push(file)\n      }\n      Vue.set(state, 'activeFile', file)\n    },\n    CLOSE_FILE (state, file) {\n      const idx = state.openFiles.findIndex(f => f.id === file.id)\n      Vue.delete(state.openFiles, idx)\n\n      if (file.id === state.activeFile.id) {\n        Vue.set(state, 'activeFile', state.openFiles[idx - 1] || {})\n      }\n    },\n    SET_OPEN_FILES (state, files) {\n      Vue.set(state, 'openFiles', [...files])\n    },\n    TOGGLE_FOLDER (state, folder) {\n      Vue.set(folder, 'expanded', !folder.expanded)\n    }\n  },\n  actions: {}\n})\n"
        },
        {
          "name": "stylus",
          "type": "dir",
          "id": "RFK5iyWIdr",
          "depth": 2,
          "path": "codylandry/src/stylus",
          "expanded": false,
          "contents": [
            {
              "id": "lJWRZULpu6",
              "depth": 3,
              "extension": "CSS",
              "name": "darcula.css",
              "type": "text",
              "path": "codylandry/src/stylus/darcula.css",
              "iconColor": "#3E86A0",
              "contents": "/**\n    Name: IntelliJ IDEA darcula theme\n    From IntelliJ IDEA by JetBrains\n */\n\n.cm-s-darcula  { font-family: \"Fira Code\", Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif;}\n.cm-s-darcula.CodeMirror { background: #2B2B2B; color: #A9B7C6; }\n\n.cm-s-darcula span.cm-meta { color: #BBB529; }\n.cm-s-darcula span.cm-number { color: #6897BB; }\n.cm-s-darcula span.cm-keyword { color: #CC7832; line-height: 1em; font-weight: bold; }\n.cm-s-darcula span.cm-def { color: #a5b3c1; font-style: italic; }\n.cm-s-darcula span.cm-variable { color: #A9B7C6; }\n.cm-s-darcula span.cm-variable-2 { color: #9876aa; }\n.cm-s-darcula span.cm-variable-3 { color: #9876AA; }\n.cm-s-darcula span.cm-type { color: #AABBCC; font-weight: bold; }\n.cm-s-darcula span.cm-property { color: #bababa; }\n.cm-s-darcula span.cm-operator { color: #A9B7C6; }\n.cm-s-darcula span.cm-string { color: #a4c160; }\n.cm-s-darcula span.cm-string-2 { color: #6A8759; }\n.cm-s-darcula span.cm-comment { color: #61A151; font-style: italic; }\n.cm-s-darcula span.cm-link { color: #CC7832; }\n.cm-s-darcula span.cm-atom { color: #a0bc5e; }\n.cm-s-darcula span.cm-error { color: #BC3F3C; }\n.cm-s-darcula span.cm-tag { color: #e1b967; }\n.cm-s-darcula span.cm-attribute { color: #bababa; }\n.cm-s-darcula span.cm-qualifier { color: #dbb565; }\n.cm-s-darcula span.cm-bracket { color: #e5b322; }\n.cm-s-darcula span.cm-builtin { color: #d1ad62; }\n.cm-s-darcula span.cm-special { color: #FF9E59; }\n\n.cm-s-darcula .CodeMirror-cursor { border-left: 1px solid #A9B7C6; }\n.cm-s-darcula .CodeMirror-activeline-background { background: #323232; }\n.cm-s-darcula .CodeMirror-gutters { background: #313335; border-right: 1px solid #313335; }\n.cm-s-darcula .CodeMirror-guttermarker { color: #FFEE80; }\n.cm-s-darcula .CodeMirror-guttermarker-subtle { color: #D0D0D0; }\n.cm-s-darcula .CodeMirrir-linenumber { color: #606366; }\n.cm-s-darcula .CodeMirror-matchingbracket { background-color: #3B514D; color: #FFEF28 !important; font-weight: bold; }\n\n.cm-s-darcula div.CodeMirror-selected { background: #214283; }\n\n.CodeMirror-hints.darcula {\n  font-family: \"Fira Code\", Monaco, Consolas, 'Courier New', monospace;\n  color: #9C9E9E;\n  background-color: #3B3E3F !important;\n}\n\n.CodeMirror-hints.darcula .CodeMirror-hint-active {\n  background-color: #494D4E !important;\n  color: #9C9E9E !important;\n}\n\n\n.CodeMirror {\n  height: 100%;\n}\n\n.CodeMirror * {\n  font-family: \"Fira Code\", monospace;\n  font-size: 12px;\n  line-height: 14px;\n}\n"
            },
            {
              "id": "8NGA17WCYu",
              "depth": 3,
              "extension": "STYL",
              "name": "fonts.styl",
              "type": "text",
              "path": "codylandry/src/stylus/fonts.styl",
              "iconColor": "#538642",
              "contents": "@import url(\"https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900\")\n@import url(\"https://cdn.jsdelivr.net/gh/tonsky/FiraCode@1.206/distr/fira_code.css\")\n*\n  font-family: \"Roboto\", sans-serif\n.hljs *\n  font-feature-settings: \"calt\" 1\n  font-family: \"Fira Code\", monospace\n  font-weight: 300\n  font-size: 14px\n"
            },
            {
              "id": "kYBUuhpUWU",
              "depth": 3,
              "extension": "CSS",
              "name": "js-term.css",
              "type": "text",
              "path": "codylandry/src/stylus/js-term.css",
              "iconColor": "#3E86A0",
              "contents": "\n.jsterm a {\n   color: #E0E0E0;\n   text-decoration: none;\n}\n\n.jsterm a:hover {\n   text-decoration: underline;\n}\n\ndiv.jsterm {\n   background: black;\n   font-family: monospace;\n   font-size: 16px;\n   color: #E0E0E0;\n   width: 900px;\n   margin-bottom: 20px;\n   white-space: pre-wrap;\n}\n\ndiv.jsterm .host, div.jsterm .host a {\n   color: #5555ff;\n   font-weight: bold;\n}\n\ndiv.jsterm .user, div.jsterm .user a {\n   color: #ff5555;\n   font-weight: bold;\n}\n\ndiv.jsterm .cwd, div.jsterm .cwd a {\n   color: #ffff55;\n   font-weight: bold;\n}\n\ndiv.jsterm .dir, div.jsterm .dir a {\n   color: #5555ff;\n   font-weight: bold;\n}\n\ndiv.jsterm .link, div.jsterm .link a {\n   color: #5555ff;\n   font-weight: bold;\n}\n\ndiv.jsterm .exec, div.jsterm .exec a {\n   color: #55ff55;\n   font-weight: bold;\n}\n\ndiv.jsterm .img, div.jsterm .img a {\n   color: #ff55ff;\n   font-weight: bold;\n}\n\n#blinker {\n    line-height: .9em;\n}\n"
            },
            {
              "id": "UIbmLd9kvK",
              "depth": 3,
              "extension": "STYL",
              "name": "main.styl",
              "type": "text",
              "path": "codylandry/src/stylus/main.styl",
              "iconColor": "#538642",
              "contents": "@import \"normalize.css\"\n@import \"darcula.css\"\n@import \"variables.styl\"\n@import \"fonts.styl\"\n"
            },
            {
              "id": "PmqVWUmgHr",
              "depth": 3,
              "extension": "CSS",
              "name": "normalize.css",
              "type": "text",
              "path": "codylandry/src/stylus/normalize.css",
              "iconColor": "#3E86A0",
              "contents": "/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\nul,\nol {\n  padding: 0;\n  margin: 0;\n  list-style: none;\n}\n\n* {\n  box-sizing: border-box;\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n  position: relative;\n  overflow: hidden;\n}\n\n/**\n * Render the `main` element consistently in IE.\n */\n\nmain {\n  display: block;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type=\"button\"],\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n"
            },
            {
              "id": "cL0bMiCdxb",
              "depth": 3,
              "extension": "STYL",
              "name": "variables.styl",
              "type": "text",
              "path": "codylandry/src/stylus/variables.styl",
              "iconColor": "#538642",
              "contents": "$darkgrey = #2b2b2b\n$grey = rgb(59, 63, 65)\n$lightgrey = rgb(187, 187, 187)\n$lightborder = rgb(75, 75, 75)\n$darkborder = rgb(50, 50, 50)\n$green = #a0bc5f\n$yellow = #e1b063\n$blue = rgb(58, 122, 137)\n$orange = #cc7832\n$darkgreen = #658055\n$purple = #9171a1\n$blue-tab-bar = rgb(56, 71, 85)\n"
            }
          ]
        }
      ]
    },
    {
      "id": "yyWoftVLKH",
      "depth": 1,
      "extension": "JS",
      "name": "vue.config.js",
      "type": "text",
      "path": "codylandry/vue.config.js",
      "iconColor": "#BD8E3E",
      "contents": "module.exports = {\n  lintOnSave: false\n}\n"
    }
  ]
}
